import{_ as t,r as e,o,c,b as s,d as a,e as p,a as l}from"./app-d4c6289a.js";const r={},k=l(`<h2 id="xss概念" tabindex="-1"><a class="header-anchor" href="#xss概念" aria-hidden="true">#</a> XSS概念</h2><p>Cross Site Scripting（跨站脚本），它是利用web应用的漏洞对网页注入可执行脚本（javascript），使得恶意代码在该应用中被执行，达到攻击效果</p><h3 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h3><p>比较常见的方式是利用<strong>未做好过滤的参数传入一些脚本</strong>语言代码块通常是 JavaScript, PHP, Java, ASP, Flash, ActiveX等等, 直接传入到页面或直接存入数据库通过用户浏览器阅读此数据时可以修改当前页面的一些信息或窃取会话和 Cookie等, 这样完成一次 XSS攻击</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>list<span class="token operator">?</span>q<span class="token operator">=</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;你已被我控制了&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>

<span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>list<span class="token operator">?</span>q<span class="token operator">=</span><span class="token operator">&lt;</span>p onclick<span class="token operator">=</span><span class="token string">&#39;alert(&#39;</span>你中招了<span class="token string">&#39;))&#39;</span><span class="token operator">&gt;</span>点我啊点我啊<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>

<span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>list<span class="token operator">?</span>q<span class="token operator">=</span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">&quot;./logo.jpg&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;location.href=&#39;www.baidu.com&#39;&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>img<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="危害" tabindex="-1"><a class="header-anchor" href="#危害" aria-hidden="true">#</a> 危害</h2><ul><li>盗取用户cookie</li><li>钓鱼攻击</li><li>挂木马</li><li>删除目标文章，恶意篡改数据</li><li>劫持用户web行为，甚至进一步渗透内网</li><li>蠕虫式DDos攻击</li><li>蠕虫式挂马攻击，刷广告，刷流量，破坏网上数据</li></ul><h2 id="xss分类" tabindex="-1"><a class="header-anchor" href="#xss分类" aria-hidden="true">#</a> XSS分类</h2><h3 id="反射型xss" tabindex="-1"><a class="header-anchor" href="#反射型xss" aria-hidden="true">#</a> 反射型XSS</h3><p>XSS代码常常出现在<strong>URL请求</strong>中，当用户访问带有XSS代码的URL请求时，服务器端接收请求并处理，然后将带有XSS代码的数据返回给浏览器，浏览器解析该段带有XSS代码的数据并执行，整个过程就像一次反射，故称为反射型XSS。</p><p>该类攻击的主要特点是它的及时性和一次性，即用户提交请求后，响应信息会立即反馈给用户。</p><p><strong>应用场景</strong>：该类攻击常发生在搜索引擎、错误提示页面等对用户的输入做出直接反应的场景中。</p><p>正常在URL请求中带上参数，这个name参数会显示在前端页面中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token operator">?</span>name<span class="token operator">=</span>ben
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在URL中植入脚本代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token operator">?</span>name<span class="token operator">=</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;你被我攻击了&#39;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因为这个参数会通过浏览器显示在页面中，浏览器会识别HTML标签和javascript代码，在没有对用户输入的内容做过滤时，当用户提交的内容存在javascript代码时会直接被浏览器识别并执行</p><h3 id="存储型xss" tabindex="-1"><a class="header-anchor" href="#存储型xss" aria-hidden="true">#</a> 存储型XSS</h3><p>用户提交的表单一POST形式提交到数据库中（例如提交文章），因为没有对用户提交的内容进行过滤，当用户上传恶意的javascript代码，代码就会储存到数据库中</p><p>当其他用户访问该文章的页面时，因为该文章含有javascript代码，浏览器识别到这些恶意的javascript代码就会被执行</p><p>上传给服务器的数据，内容没有被过滤</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">&#39;文章标题&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;hello,这里有一个js脚本，当打开这篇文章就会弹窗&lt;script&gt;alert(&#39;</span>xss<span class="token string">&#39;)&lt;/script&gt;&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dom型xss" tabindex="-1"><a class="header-anchor" href="#dom型xss" aria-hidden="true">#</a> DOM型XSS</h3><p>DOM可以允许程序动态的访问和更新文档的内容、结构等。客户端JavaScript可以访问浏览器的文档对象模型。也就是说，通过JavaScript代码控制DOM节点就可以不经过服务器端的参与重构HTML页面。</p><p>该类攻击是反射型XSS的变种。它通常是由于客户端接收到的脚本代码存在逻辑错误或者使用不当导致的。比如Javascript代码不正确地使用各种DOM方法(如document.write)和Javascript内部函数(如eval函数)，<strong>动态拼接HTML代码和脚本代码</strong>就容易引发DOM型的跨站脚本攻击。</p><p>因此，DOM型XSS与前面两种XSS的区别就在于DOM型XSS攻击的代码<strong>不需要与服务器端进行交互</strong>，DOM型XSS的触发基于浏览器端对DOM数据的解析来完成，也就是完全是客户端的事情。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xssd_main<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">function</span> <span class="token function">domxss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">var</span> str<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementByla</span><span class="token punctuation">(</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;dom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;&lt;a href=&#39; &quot;</span> <span class="token operator">+</span>str<span class="token operator">+</span> <span class="token string">&quot; &#39;&gt;what do you see?&lt;/a&gt;&quot;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>click me<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">domxss</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将用户输入的内容，点击click me按钮后，显示在DOM元素中。domxss方法将用户输入的内容放到 <code>&lt;a&gt;</code>标签中，<code>&lt;a&gt;</code>因为没有对标签转义过滤，将会将这个标签插入到DOM中，这是一个真实的标签，当用户输入javascript代码，是可以被执行的</p><p>当用户输入 <code>&#39;&gt;&lt;img src=&quot;#&quot; οnclick=&quot;alert(document.cookie)&quot; &gt;</code>获得cookie。</p><p><code>&lt;a href=&#39; &#39;&gt;&lt;img src=&quot;#&quot; οnclick=&quot;alert(document.cookie)&quot; /&gt; &#39;&gt;what do you see?&lt;/a&gt;</code></p><h2 id="判断是哪一种xss" tabindex="-1"><a class="header-anchor" href="#判断是哪一种xss" aria-hidden="true">#</a> 判断是哪一种XSS</h2><p>发送一次带XSS代码的请求，若只能在当前返回的数据包里发现XSS代码，则是反射型；若以后这个页面的返回包里都会有XSS代码，则是存储型；若在返回包里找不到XSS代码，则是DOM型。</p><h2 id="xss漏洞的检测与防御" tabindex="-1"><a class="header-anchor" href="#xss漏洞的检测与防御" aria-hidden="true">#</a> XSS漏洞的检测与防御</h2><h3 id="手工检测" tabindex="-1"><a class="header-anchor" href="#手工检测" aria-hidden="true">#</a> 手工检测</h3><p>手工检测重点要考虑数据输入的地方，且需要清楚输入的数据输出到什么地方。</p><p>在检测的开始，可以输入一些敏感字符，比如“&lt;、&gt;、（）”等，提交后查看网页源代码的变化以发现输入被输出到什么地方，且可以发现相关敏感字符是否被过滤。</p><p>手工检测结果相对准确，但效率较低。</p><h3 id="工具检测" tabindex="-1"><a class="header-anchor" href="#工具检测" aria-hidden="true">#</a> 工具检测</h3><p>常用工具有AVWS（Acunetix Web Vulnerability Scanner）、BurpSuite等。还有一些专门针对XSS漏洞的检测工具，如：XSSer、XSSF（跨站脚本攻击框架）、BeEF(The Browser Exploitation Framework)等。</p><h3 id="防御" tabindex="-1"><a class="header-anchor" href="#防御" aria-hidden="true">#</a> 防御</h3><ul><li>不要相信用户输入，过滤所有的HTTP Request参数。对HTML标签或特殊字符进行过滤</li><li>http-only，禁止js读取某些cookie。</li><li>避免拼接html</li><li>避免内联事件。如 <code>&lt;button onclick=&quot;load(&#39;{{ data }}&#39;)&quot;&gt;点&lt;/button&gt;</code></li></ul><h3 id="输入检查" tabindex="-1"><a class="header-anchor" href="#输入检查" aria-hidden="true">#</a> 输入检查</h3><p>输入检查，服务端和客户端都要做</p><p>输入XSS的地方</p><ul><li>页面中所有的input框</li><li>window.location（href、hash等）</li><li>window.name</li><li>document.referrer</li><li>document.cookie</li><li>localstorage</li><li>XMLHttpRequest返回的数据</li></ul><h3 id="输出检查" tabindex="-1"><a class="header-anchor" href="#输出检查" aria-hidden="true">#</a> 输出检查</h3><p>一般就是在变量输出到HTML页面时，使用<strong>编码或转义的方式来防御XSS攻击</strong>。XSS的本质就是<strong>HTML注入</strong>，用户的数据被当成了HTML代码一部分来执行，从而混淆了原本的语义，产生了新的语义。</p><p>触发XSS的地方</p><ul><li>document.write</li><li>xxx.innerHTML</li><li>xxx.outerHTML</li><li>innerHTML.replace</li><li>document.attachEvent</li><li>window.attachEvent</li><li>document.location.replace</li><li>document.location.assign</li></ul><h2 id="编码转义" tabindex="-1"><a class="header-anchor" href="#编码转义" aria-hidden="true">#</a> 编码转义</h2><h3 id="javascriptencode" tabindex="-1"><a class="header-anchor" href="#javascriptencode" aria-hidden="true">#</a> javascriptEncode</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//使用“\\”对特殊字符进行转义，除数字字母之外，小于127使用16进制“\\xHH”的方式进行编码，大于用unicode（非常严格模式）。</span>
<span class="token keyword">var</span> <span class="token function-variable function">JavaScriptEncode</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> hex<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;f&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">changeTo16Hex</span><span class="token punctuation">(</span><span class="token parameter">charCode</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;\\\\x&quot;</span> <span class="token operator">+</span> charCode<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">encodeCharx</span><span class="token punctuation">(</span><span class="token parameter">original</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> found <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> thecharchar <span class="token operator">=</span> original<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> thechar <span class="token operator">=</span> original<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>thecharchar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&#39;\\n&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\n&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">//newline</span>
      <span class="token keyword">case</span> <span class="token string">&#39;\\r&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\r&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">//Carriage return</span>
      <span class="token keyword">case</span> <span class="token string">&#39;\\&#39;&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\&#39;&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;&quot;&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\\\&quot;&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;\\&amp;&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\&amp;&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;\\\\&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\\\\\&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;\\t&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\t&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;\\b&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\b&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;\\f&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\f&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;/&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\x2F&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;&lt;&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\x3C&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;&gt;&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;\\\\x3E&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        found<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>found<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>thechar <span class="token operator">&gt;</span> <span class="token number">47</span> <span class="token operator">&amp;&amp;</span> thechar <span class="token operator">&lt;</span> <span class="token number">58</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//数字</span>
        <span class="token keyword">return</span> original<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  
      <span class="token keyword">if</span><span class="token punctuation">(</span>thechar <span class="token operator">&gt;</span> <span class="token number">64</span> <span class="token operator">&amp;&amp;</span> thechar <span class="token operator">&lt;</span> <span class="token number">91</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//大写字母</span>
        <span class="token keyword">return</span> original<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span><span class="token punctuation">(</span>thechar <span class="token operator">&gt;</span> <span class="token number">96</span> <span class="token operator">&amp;&amp;</span> thechar <span class="token operator">&lt;</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//小写字母</span>
        <span class="token keyword">return</span> original<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>thechar<span class="token operator">&gt;</span><span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//大于127用unicode</span>
        <span class="token keyword">var</span> c <span class="token operator">=</span> thechar<span class="token punctuation">;</span>
        <span class="token keyword">var</span> a4 <span class="token operator">=</span> c<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
        c <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>c<span class="token operator">/</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token keyword">var</span> a3 <span class="token operator">=</span> c<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
        c <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>c<span class="token operator">/</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> a2 <span class="token operator">=</span> c<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
        c <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>c<span class="token operator">/</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> a1 <span class="token operator">=</span> c<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;\\\\u&quot;</span><span class="token operator">+</span>hex<span class="token punctuation">[</span>a1<span class="token punctuation">]</span><span class="token operator">+</span>hex<span class="token punctuation">[</span>a2<span class="token punctuation">]</span><span class="token operator">+</span>hex<span class="token punctuation">[</span>a3<span class="token punctuation">]</span><span class="token operator">+</span>hex<span class="token punctuation">[</span>a4<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">changeTo16Hex</span><span class="token punctuation">(</span>original<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>   

  <span class="token keyword">var</span> preescape <span class="token operator">=</span> str<span class="token punctuation">;</span>
  <span class="token keyword">var</span> escaped <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> preescape<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    escaped <span class="token operator">=</span> escaped <span class="token operator">+</span> <span class="token function">encodeCharx</span><span class="token punctuation">(</span>preescape<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> escaped<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="htmlencode" tabindex="-1"><a class="header-anchor" href="#htmlencode" aria-hidden="true">#</a> <strong>HtmlEncode</strong></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">HtmlEncode</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> hex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;f&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> preescape <span class="token operator">=</span> str<span class="token punctuation">;</span>
  <span class="token keyword">var</span> escaped <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> preescape<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> p <span class="token operator">=</span> preescape<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    escaped <span class="token operator">=</span> escaped <span class="token operator">+</span> <span class="token function">escapeCharx</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> escaped<span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">escapeCharx</span><span class="token punctuation">(</span><span class="token parameter">original</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> found<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> thechar<span class="token operator">=</span>original<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>thechar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot;&lt;br/&gt;&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">//newline</span>
      <span class="token keyword">case</span> <span class="token number">32</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">//space</span>
      <span class="token keyword">case</span> <span class="token number">34</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token string">&quot;; break; //&quot;</span>
      <span class="token keyword">case</span> <span class="token number">38</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">//&amp;</span>
      <span class="token keyword">case</span> <span class="token number">39</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">//&#39;</span>
      <span class="token keyword">case</span> <span class="token number">47</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// /</span>
      <span class="token keyword">case</span> <span class="token number">60</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;&lt;&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">//&lt;</span>
      <span class="token keyword">case</span> <span class="token number">62</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">//&gt;</span>
      <span class="token keyword">case</span> <span class="token number">198</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Æ&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">193</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Á&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">194</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Â&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">192</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;À&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">197</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Å&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">195</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ã&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">196</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ä&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">199</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ç&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">208</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ð&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">201</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;É&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">202</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ê&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">200</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;È&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">203</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ë&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">205</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Í&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">206</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Î&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">204</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ì&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">207</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ï&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">209</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ñ&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">211</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ó&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">212</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ô&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">210</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ò&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">216</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ø&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">213</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Õ&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">214</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ö&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">222</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Þ&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">218</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ú&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">219</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Û&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">217</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ù&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">220</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ü&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">221</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;Ý&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">225</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;á&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">226</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;â&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">230</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;æ&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">224</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;à&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">229</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;å&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">227</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ã&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">228</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ä&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">231</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ç&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">233</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;é&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">234</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ê&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">232</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;è&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">240</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ð&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">235</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ë&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">237</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;í&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">238</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;î&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">236</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ì&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">239</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ï&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">241</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ñ&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">243</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ó&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">244</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ô&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">242</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ò&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">248</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ø&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">245</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;õ&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">246</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ö&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">223</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ß&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">254</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;þ&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">250</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ú&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">251</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;û&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">249</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ù&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">252</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ü&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">253</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ý&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token number">255</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;ÿ&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">162</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token string">&quot;¢&quot;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> 
      <span class="token keyword">case</span> <span class="token string">&#39;\\r&#39;</span><span class="token operator">:</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        found<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>found<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>thechar<span class="token operator">&gt;</span><span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> c<span class="token operator">=</span>thechar<span class="token punctuation">;</span>
        <span class="token keyword">var</span> a4<span class="token operator">=</span>c<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
        c<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>c<span class="token operator">/</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token keyword">var</span> a3<span class="token operator">=</span>c<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
        c<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>c<span class="token operator">/</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> a2<span class="token operator">=</span>c<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
        c<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>c<span class="token operator">/</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> a1<span class="token operator">=</span>c<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&amp;#x&quot;</span><span class="token operator">+</span>hex<span class="token punctuation">[</span>a1<span class="token punctuation">]</span><span class="token operator">+</span>hex<span class="token punctuation">[</span>a2<span class="token punctuation">]</span><span class="token operator">+</span>hex<span class="token punctuation">[</span>a3<span class="token punctuation">]</span><span class="token operator">+</span>hex<span class="token punctuation">[</span>a4<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> original<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>  
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,55),u={href:"https://blog.csdn.net/qq_48947141/article/details/120578530",target:"_blank",rel:"noopener noreferrer"},i={href:"https://www.cnblogs.com/lovesong/p/5223989.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://mp.weixin.qq.com/s?__biz=MzIyNTgwOTIyOQ==&mid=2247488847&idx=1&sn=bb4a6d3fe80946ee2eab10dc871b9bd0&chksm=e87b536ddf0cda7ba525e5a691fec8cea78fa73151ceb321bc051e552d88eba2105604e21bc9&scene=27",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.cnblogs.com/lovesong/p/5211667.html",target:"_blank",rel:"noopener noreferrer"};function b(m,w){const n=e("ExternalLinkIcon");return o(),c("div",null,[k,s("p",null,[s("a",u,[a("XSS漏洞_花拾八的博客-CSDN博客"),p(n)])]),s("p",null,[s("a",i,[a("XSS攻击的解决方法 - 海角在眼前 - 博客园 (cnblogs.com)"),p(n)])]),s("p",null,[s("a",d,[a("干货：XSS跨站攻击原理+常见攻击方法汇总 (qq.com)"),p(n)])]),s("p",null,[s("a",v,[a("HtmlEncode和JavaScriptEncode（预防XSS） - 海角在眼前 - 博客园 (cnblogs.com)"),p(n)])])])}const g=t(r,[["render",b],["__file","xss.html.vue"]]);export{g as default};
