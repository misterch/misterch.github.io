import{_ as d,r as o,o as m,c as k,b as e,d as a,e as n,w as s,a as l}from"./app-d4c6289a.js";const v={},_=e("p",null,"通过javascript来让元素从一个位置过渡到另一个位置，需要知道的变量有",-1),f=e("ul",null,[e("li",null,"from：开始位置"),e("li",null,"to：结束位置")],-1),b=e("p",null,"这个动画过程要多少时间过渡完成，那么就需要知道动画持续的时间",-1),h=e("ul",null,[e("li",null,"duration：动画持续的时间")],-1),y=e("p",null,"这个时间内并非一次过从开始位置移动到结束位置，应该是将duration切割成一小段一小段时间，每隔一小段时间移动一小段位置，即需要给出一个间隔时间。这样就可以从视觉上观察到移动的过程，即动画效果",-1),g=e("ul",null,[e("li",null,"interval：移动间隔时间")],-1),w=e("p",null,"元素在持续时间里每间隔一个时间移动一次位置，要多少次才能移动到目标位置呢？",-1),x={class:"katex"},A={class:"katex-mathml"},T=l('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathit">s</span><span class="mrel">=</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="mbin">÷</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">t</span><span class="mord mathit">e</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.01968em;">l</span></span></span>',1),E=e("p",null,"在间隔时间内，元素应该移动多少呢？",-1),M={class:"katex"},N={class:"katex-mathml"},V=l('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">i</span><span class="mord mathit">s</span><span class="mrel">=</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mord mathit">o</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">o</span><span class="mord mathit">m</span><span class="mclose">)</span><span class="mbin">÷</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span>',1),q=l(`<p>通过以上给出的变量，就可以创建一个过渡动画方法</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">AnimateOption</span> <span class="token punctuation">{</span>
  from<span class="token operator">:</span> <span class="token builtin">number</span>
  to<span class="token operator">:</span> <span class="token builtin">number</span>
  interval<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token comment">//动画过渡时间</span>
  duration<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token comment">//动画间隔时间</span>
  <span class="token function-variable function">onMove</span><span class="token operator">:</span> <span class="token punctuation">(</span>progress<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  onEnd<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>


<span class="token doc-comment comment">/**
* requestAnimationFrame方式
*/</span>
<span class="token keyword">function</span> <span class="token function">createAnimate</span><span class="token punctuation">(</span>options<span class="token operator">:</span>AnimateOption<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> from <span class="token operator">=</span> options<span class="token punctuation">.</span>from
  <span class="token keyword">const</span> to <span class="token operator">=</span> options<span class="token punctuation">.</span>to
  <span class="token keyword">const</span> duration <span class="token operator">=</span> options<span class="token punctuation">.</span>duration
  <span class="token keyword">const</span> interval <span class="token operator">=</span> options<span class="token punctuation">.</span>interval
  <span class="token keyword">const</span> times <span class="token operator">=</span> duration <span class="token operator">/</span> interval
  <span class="token keyword">const</span> dis <span class="token operator">=</span> <span class="token punctuation">(</span>to<span class="token operator">-</span>from<span class="token punctuation">)</span><span class="token operator">/</span>times
  <span class="token keyword">let</span> curTime <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">//从0开始，记录执行次数，到达最大次数代表已到达目标位置</span>
  <span class="token comment">//使用requestAnimationFrame</span>
  <span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token comment">//到达目标次数，即到达目标位置，停止继续执行</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>curTime<span class="token operator">&gt;=</span>times<span class="token punctuation">)</span><span class="token punctuation">{</span>
        options<span class="token punctuation">.</span><span class="token function">onMove</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span>
        options<span class="token punctuation">.</span>onEnd<span class="token operator">&amp;&amp;</span>options<span class="token punctuation">.</span><span class="token function">onEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token comment">//每次增加的量</span>
      from<span class="token operator">+=</span>dis
      curTime<span class="token operator">++</span>
      options<span class="token punctuation">.</span><span class="token function">onMove</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span>
      <span class="token comment">//递归执行动画</span>
      <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
* setInterval方式
*/</span>
<span class="token keyword">function</span> <span class="token function">createAnimate</span><span class="token punctuation">(</span>options<span class="token operator">:</span>AnimateOption<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> from <span class="token operator">=</span> options<span class="token punctuation">.</span>from
  <span class="token keyword">const</span> to <span class="token operator">=</span> options<span class="token punctuation">.</span>to
  <span class="token keyword">const</span> duration <span class="token operator">=</span> options<span class="token punctuation">.</span>duration
  <span class="token keyword">const</span> interval <span class="token operator">=</span> options<span class="token punctuation">.</span>interval
  <span class="token keyword">const</span> times <span class="token operator">=</span> duration <span class="token operator">/</span> interval
  <span class="token keyword">const</span> dis <span class="token operator">=</span> <span class="token punctuation">(</span>to<span class="token operator">-</span>from<span class="token punctuation">)</span><span class="token operator">/</span>times
  <span class="token keyword">let</span> timer<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token keyword">let</span> curTime <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">//从0开始，记录执行次数，到达最大次数代表已到达目标位置</span>
  timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    from<span class="token operator">+=</span>dis
    curTime<span class="token operator">++</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>curTime<span class="token operator">&gt;=</span>times<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
      options<span class="token punctuation">.</span><span class="token function">onMove</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span>
      options<span class="token punctuation">.</span>onEnd<span class="token operator">&amp;&amp;</span>options<span class="token punctuation">.</span><span class="token function">onEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    options<span class="token punctuation">.</span><span class="token function">onMove</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>interval<span class="token punctuation">)</span>
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function B(F,I){const t=o("mi"),p=o("mo"),i=o("mrow"),c=o("annotation"),u=o("semantics"),r=o("math");return m(),k("div",null,[_,f,b,h,y,g,w,e("p",null,[a("移动次数："),e("span",x,[e("span",A,[n(r,null,{default:s(()=>[n(u,null,{default:s(()=>[n(i,null,{default:s(()=>[n(t,null,{default:s(()=>[a("t")]),_:1}),n(t,null,{default:s(()=>[a("i")]),_:1}),n(t,null,{default:s(()=>[a("m")]),_:1}),n(t,null,{default:s(()=>[a("e")]),_:1}),n(t,null,{default:s(()=>[a("s")]),_:1}),n(p,null,{default:s(()=>[a("=")]),_:1}),n(t,null,{default:s(()=>[a("d")]),_:1}),n(t,null,{default:s(()=>[a("u")]),_:1}),n(t,null,{default:s(()=>[a("r")]),_:1}),n(t,null,{default:s(()=>[a("a")]),_:1}),n(t,null,{default:s(()=>[a("t")]),_:1}),n(t,null,{default:s(()=>[a("i")]),_:1}),n(t,null,{default:s(()=>[a("o")]),_:1}),n(t,null,{default:s(()=>[a("n")]),_:1}),n(p,null,{default:s(()=>[a("÷")]),_:1}),n(t,null,{default:s(()=>[a("i")]),_:1}),n(t,null,{default:s(()=>[a("n")]),_:1}),n(t,null,{default:s(()=>[a("t")]),_:1}),n(t,null,{default:s(()=>[a("e")]),_:1}),n(t,null,{default:s(()=>[a("r")]),_:1}),n(t,null,{default:s(()=>[a("v")]),_:1}),n(t,null,{default:s(()=>[a("a")]),_:1}),n(t,null,{default:s(()=>[a("l")]),_:1})]),_:1}),n(c,{encoding:"application/x-tex"},{default:s(()=>[a("times=duration \\div interval")]),_:1})]),_:1})]),_:1})]),T])]),E,e("p",null,[a("每次移动距离："),e("span",M,[e("span",N,[n(r,null,{default:s(()=>[n(u,null,{default:s(()=>[n(i,null,{default:s(()=>[n(t,null,{default:s(()=>[a("d")]),_:1}),n(t,null,{default:s(()=>[a("i")]),_:1}),n(t,null,{default:s(()=>[a("s")]),_:1}),n(p,null,{default:s(()=>[a("=")]),_:1}),n(p,null,{default:s(()=>[a("(")]),_:1}),n(t,null,{default:s(()=>[a("t")]),_:1}),n(t,null,{default:s(()=>[a("o")]),_:1}),n(p,null,{default:s(()=>[a("−")]),_:1}),n(t,null,{default:s(()=>[a("f")]),_:1}),n(t,null,{default:s(()=>[a("r")]),_:1}),n(t,null,{default:s(()=>[a("o")]),_:1}),n(t,null,{default:s(()=>[a("m")]),_:1}),n(p,null,{default:s(()=>[a(")")]),_:1}),n(p,null,{default:s(()=>[a("÷")]),_:1}),n(t,null,{default:s(()=>[a("t")]),_:1}),n(t,null,{default:s(()=>[a("i")]),_:1}),n(t,null,{default:s(()=>[a("m")]),_:1}),n(t,null,{default:s(()=>[a("e")]),_:1}),n(t,null,{default:s(()=>[a("s")]),_:1})]),_:1}),n(c,{encoding:"application/x-tex"},{default:s(()=>[a("dis=(to-from) \\div times")]),_:1})]),_:1})]),_:1})]),V])]),q])}const C=d(v,[["render",B],["__file","animate1.html.vue"]]);export{C as default};
