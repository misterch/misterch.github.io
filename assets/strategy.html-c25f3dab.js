import{_ as n,o as s,c as a,a as p}from"./app-d4c6289a.js";const t={},e=p(`<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><p>策略模式是指对一系列的算法定义，并将每一个算法封装起来，而且使他们还可以相互替换。策略模式让算法独立于使用他的客户而独立变化</p><p>通俗说法：使用一个对象管理一系列算法，算法可以根据用户的具体使用灵活变化</p><h3 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h3><p>策略模式提供了管理相关的算法族的办法，策略模式提供了可以替换继承关系的办法，使用策略模式可以避免使用多重条件转义语句</p><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3><ul><li>策略模式支持在运行时选择算法，把它们一个个封装起来没并且使它们可以相互替换</li><li>决定用一个类对象实例来管理规则的校验</li><li>该对象可以相应地主动添加对规则的响应处理办法</li><li>校验数据的时候可以相应的返回相关信息</li></ul><h3 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h3><p>当业务复杂度达到一定程度时，我们才选用设计模式去解决复杂问题。</p><p>扩展性，复用性，冗余度小的情况下没必要使用</p><ul><li>表单验证</li></ul><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h2><p>通过策略模式实现通用表单验证的验证器</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Validator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>cache <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  	<span class="token comment">//保存错误提示的DOM，用来验证的时候重置</span>
  	<span class="token keyword">this</span><span class="token punctuation">.</span>warnDom <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token class-name">Validator</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>strategies <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">isNonEmpty</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>errorMsg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token operator">==</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> errorMsg
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">maxLength</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>length<span class="token punctuation">,</span>errorMsg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token operator">!==</span><span class="token string">&#39;&#39;</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>length<span class="token operator">&gt;</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> errorMsg
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">minLength</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>length<span class="token punctuation">,</span>errorMsg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token operator">!==</span><span class="token string">&#39;&#39;</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>length<span class="token operator">&lt;</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> errorMsg
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
* @param {element} validateDom 校验的元素
* @param {element} errorDom 错误消息显示的元素
* @param {Array} validate 校验规则[{strategy: &#39;校验名称&#39;,errorMsg:&#39;错误提示&#39;}]
*/</span>
<span class="token class-name">Validator</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">validateDom<span class="token punctuation">,</span>errorDom<span class="token punctuation">,</span>validateArr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>warnDom<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>errorDom<span class="token punctuation">)</span>
  validateArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">rule</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token comment">//[&#39;isNonEmpty&#39;] [&#39;maxLength&#39;,4]</span>
      <span class="token keyword">const</span> ruleInfo <span class="token operator">=</span> rule<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span>
      <span class="token comment">//[] [4]</span>
      <span class="token keyword">const</span> ruleName <span class="token operator">=</span> ruleInfo<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token comment">//[value] [value,4]</span>
      ruleInfo<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>validateDom<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
      <span class="token comment">//[value,errMsg] [value,4,errMsg]</span>
      ruleInfo<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span>errorMsg<span class="token punctuation">)</span>
      <span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>strategies<span class="token punctuation">[</span>ruleName<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>ruleInfo<span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>msg<span class="token operator">!==</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        errorDom<span class="token punctuation">.</span>innerText <span class="token operator">=</span> msg
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> msg
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 验证所有add到数组中的表单数据，根据相对应的校验规则进行验证</span>
<span class="token comment">// 所有通过了才返回true，否则为false</span>
<span class="token class-name">Validator</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">start</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token comment">//将所有warnDom重置</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>warnDom<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">dom</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    dom<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">validate</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      flag <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> flag
<span class="token punctuation">}</span>
<span class="token comment">//扩展Validator的校验方法</span>
<span class="token class-name">Validator</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">extend</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> prop <span class="token keyword">in</span> config<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>strategies<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> config<span class="token punctuation">[</span>prop<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> validator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Validator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
validator<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">isEmail</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>errorMsg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(.[a-zA-Z0-9_-]+)+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> errorMsg
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">isPhone</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>errorMsg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1\\d{10}</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> errorMsg
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  validator<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>userDom<span class="token punctuation">,</span>userErrDom<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">strategy</span><span class="token operator">:</span><span class="token string">&#39;isNonEmpty&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">errorMsg</span><span class="token operator">:</span><span class="token string">&#39;用户名不能为空&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">strategy</span><span class="token operator">:</span><span class="token string">&#39;maxLength:4&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">errorMsg</span><span class="token operator">:</span><span class="token string">&#39;用户名不能超过4位&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  validator<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pswDom<span class="token punctuation">,</span>pswErrDom<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">strategy</span><span class="token operator">:</span><span class="token string">&#39;isNonEmpty&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">errorMsg</span><span class="token operator">:</span><span class="token string">&#39;密码不能为空&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">strategy</span><span class="token operator">:</span><span class="token string">&#39;minLength:6&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">errorMsg</span><span class="token operator">:</span><span class="token string">&#39;密码不能少于6位&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  validator<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>emailDom<span class="token punctuation">,</span>emailErrDom<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">strategy</span><span class="token operator">:</span><span class="token string">&#39;isNonEmpty&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">errorMsg</span><span class="token operator">:</span><span class="token string">&#39;邮箱不能为空&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">strategy</span><span class="token operator">:</span><span class="token string">&#39;isEmail&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">errorMsg</span><span class="token operator">:</span><span class="token string">&#39;邮箱格式错误&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>validator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;通过验证&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","strategy.html.vue"]]);export{r as default};
