import{_ as p,r as o,o as c,c as i,b as n,d as s,e as t,a as e}from"./app-d4c6289a.js";const l={},r=n("p",null,"JavaScript 动画可以处理 CSS 无法处理的事情。",-1),u=n("p",null,"例如，沿着具有与 Bezier 曲线不同的时序函数的复杂路径移动，或者实现画布上的动画。",-1),d={id:"使用-requestanimationframe",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#使用-requestanimationframe","aria-hidden":"true"},"#",-1),m={href:"https://zh.javascript.info/js-animation#shi-yong-requestanimationframe",target:"_blank",rel:"noopener noreferrer"},v=e(`<p>假设我们有几个同时运行的动画。</p><p>如果我们单独运行它们，每个都有自己的 <code>setInterval(..., 20)</code>，那么浏览器必须以比 <code>20ms</code> 更频繁的速度重绘。</p><p>每个 <code>setInterval</code> 每 <code>20ms</code> 触发一次，但它们相互独立，因此 <code>20ms</code> 内将有多个独立运行的重绘。</p><p>这几个独立的重绘应该组合在一起，以使浏览器更加容易处理。</p><p>换句话说，像下面这样：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">animate1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">animate2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">animate3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>……比这样更好：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setInterval</span><span class="token punctuation">(</span>animate1<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setInterval</span><span class="token punctuation">(</span>animate2<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setInterval</span><span class="token punctuation">(</span>animate3<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还有一件事需要记住。有时当 CPU 过载时，或者有其他原因需要降低重绘频率。例如，如果浏览器选项卡被隐藏，那么绘图完全没有意义。</p>`,9),h={href:"http://www.w3.org/TR/animation-timing/",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"requestAnimationFrame",-1),f=e(`<p>它解决了所有这些问题，甚至更多其它的问题。</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> requestId <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这会让 <code>callback</code> 函数在浏览器每次重绘的最近时间运行。</p><p>如果我们对 <code>callback</code> 中的元素进行变化，这些变化将与其他 <code>requestAnimationFrame</code> 回调和 CSS 动画组合在一起。因此，只会有一次几何重新计算和重绘，而不是多次。</p><p>返回值 <code>requestId</code> 可用来取消回调：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 取消回调的周期执行</span>
<span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>requestId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,7),_=n("code",null,"callback",-1),g={href:"https://developer.mozilla.org/zh/docs/Web/API/Performance/now",target:"_blank",rel:"noopener noreferrer"},j=e(`<p>通常 <code>callback</code> 很快就会运行，除非 CPU 过载或笔记本电量消耗殆尽，或者其他原因。</p><p>下面的代码显示了 <code>requestAnimationFrame</code> 的前 10 次运行之间的时间间隔。通常是 10-20ms：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> prev <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> times <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">measure</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span><span class="token string">&quot;beforeEnd&quot;</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>time <span class="token operator">-</span> prev<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    prev <span class="token operator">=</span> time<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>times<span class="token operator">++</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>measure<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),x={id:"结构化动画",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#结构化动画","aria-hidden":"true"},"#",-1),y={href:"https://zh.javascript.info/js-animation#jie-gou-hua-dong-hua",target:"_blank",rel:"noopener noreferrer"},F=e(`<p>现在我们可以在 <code>requestAnimationFrame</code> 基础上创建一个更通用的动画函数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>timing<span class="token punctuation">,</span> draw<span class="token punctuation">,</span> duration<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">let</span> start <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// timeFraction 从 0 增加到 1</span>
    <span class="token keyword">let</span> timeFraction <span class="token operator">=</span> <span class="token punctuation">(</span>time <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> duration<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeFraction <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> timeFraction <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token comment">// 计算当前动画状态</span>
    <span class="token keyword">let</span> progress <span class="token operator">=</span> <span class="token function">timing</span><span class="token punctuation">(</span>timeFraction<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">draw</span><span class="token punctuation">(</span>progress<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 绘制</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeFraction <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>animate</code> 函数接受 3 个描述动画的基本参数：</p><ul><li><p><code>duration</code></p><p>动画总时间，比如 <code>1000</code>。</p></li><li><p><code>timing(timeFraction)</code></p><p>时序函数，类似 CSS 属性 <code>transition-timing-function</code>，传入一个已过去的时间与总时间之比的小数（<code>0</code> 代表开始，<code>1</code> 代表结束），返回动画完成度（类似 Bezier 曲线中的 <code>y</code>）。</p></li><li><p><code>draw(progress)</code></p><p>获取动画完成状态并绘制的函数。值 <code>progress = 0</code> 表示开始动画状态，<code>progress = 1</code> 表示结束状态。这是实际绘制动画的函数。它可以移动元素：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token parameter">progress</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  train<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> progress <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>……或者做任何其他事情，我们可以以任何方式为任何事物制作动画。</p></li></ul><p>让我们使用我们的函数将元素的 <code>width</code> 从 <code>0</code> 变化为 <code>100%</code>。</p>`,5),q={id:"时序函数",tabindex:"-1"},z=n("a",{class:"header-anchor",href:"#时序函数","aria-hidden":"true"},"#",-1),A={href:"https://zh.javascript.info/js-animation#shi-xu-han-shu",target:"_blank",rel:"noopener noreferrer"},I=n("p",null,"上文我们看到了最简单的线性时序函数。",-1),B=n("p",null,"让我们看看更多。我们将尝试使用不同时序函数的移动动画来查看它们的工作原理。",-1),M={id:"n-次幂",tabindex:"-1"},S=n("a",{class:"header-anchor",href:"#n-次幂","aria-hidden":"true"},"#",-1),C={href:"https://zh.javascript.info/js-animation#n-ci-mi",target:"_blank",rel:"noopener noreferrer"},P=e(`<p>如果我们想加速动画，我们可以让 <code>progress</code> 为 <code>n</code> 次幂。</p><p>例如，抛物线：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">quad</span><span class="token punctuation">(</span><span class="token parameter">timeFraction</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>timeFraction<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图像如下：</p><p>看看实际效果（点击激活）：</p><iframe class="code-result__iframe" data-trusted="1" src="https://zh.js.cx/article/js-animation/quad/" style="display:block;border:0px;width:798px;height:40px;background:var(--iframeBg);"></iframe><p>……或者三次曲线甚至使用更大的 <code>n</code>。增大幂会让动画加速得更快。</p><p>下面是 <code>progress</code> 为 <code>5</code> 次幂的图像:</p><p>实际效果：</p><iframe class="code-result__iframe" data-trusted="1" src="https://zh.js.cx/article/js-animation/quint/" style="display:block;border:0px;width:798px;height:40px;background:var(--iframeBg);"></iframe>`,10),E={id:"圆弧",tabindex:"-1"},N=n("a",{class:"header-anchor",href:"#圆弧","aria-hidden":"true"},"#",-1),V={href:"https://zh.javascript.info/js-animation#yuan-hu",target:"_blank",rel:"noopener noreferrer"},L=e(`<p>函数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">circ</span><span class="token punctuation">(</span><span class="token parameter">timeFraction</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">acos</span><span class="token punctuation">(</span>timeFraction<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图像：</p><iframe class="code-result__iframe" data-trusted="1" src="https://zh.js.cx/article/js-animation/circ/" style="display:block;border:0px;width:798px;height:40px;background:var(--iframeBg);"></iframe>`,4),T={id:"反弹-弓箭射击",tabindex:"-1"},J=n("a",{class:"header-anchor",href:"#反弹-弓箭射击","aria-hidden":"true"},"#",-1),U={href:"https://zh.javascript.info/js-animation#fan-dan-gong-jian-she-ji",target:"_blank",rel:"noopener noreferrer"},H=e(`<p>此函数执行“弓箭射击”。首先，我们“拉弓弦”，然后“射击”。</p><p>与以前的函数不同，它取决于附加参数 <code>x</code>，即“弹性系数”。“拉弓弦”的距离由它定义。</p><p>代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">back</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> timeFraction</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>timeFraction<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> timeFraction <span class="token operator">-</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>x = 1.5</code> 时的图像：</strong></p><p>在动画中我们使用特定的 <code>x</code> 值。下面是 <code>x = 1.5</code> 时的例子：</p><iframe class="code-result__iframe" data-trusted="1" src="https://zh.js.cx/article/js-animation/back/" style="display:block;border:0px;width:798px;height:40px;background:var(--iframeBg);"></iframe>`,7),R={id:"弹跳",tabindex:"-1"},W=n("a",{class:"header-anchor",href:"#弹跳","aria-hidden":"true"},"#",-1),D={href:"https://zh.javascript.info/js-animation#dan-tiao",target:"_blank",rel:"noopener noreferrer"},G=e(`<p>想象一下，我们正在抛球。球落下之后，弹跳几次然后停下来。</p><p><code>bounce</code> 函数也是如此，但顺序相反：“bouncing”立即启动。它使用了几个特殊的系数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bounce</span><span class="token punctuation">(</span><span class="token parameter">timeFraction</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> result<span class="token punctuation">;</span> <span class="token number">1</span><span class="token punctuation">;</span> a <span class="token operator">+=</span> b<span class="token punctuation">,</span> b <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeFraction <span class="token operator">&gt;=</span> <span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> a<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token operator">-</span> <span class="token number">6</span> <span class="token operator">*</span> a <span class="token operator">-</span> <span class="token number">11</span> <span class="token operator">*</span> timeFraction<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>演示：</p><iframe class="code-result__iframe" data-trusted="1" src="https://zh.js.cx/article/js-animation/bounce/" style="display:block;border:0px;width:798px;height:40px;background:var(--iframeBg);"></iframe>`,5),K={id:"伸缩动画",tabindex:"-1"},O=n("a",{class:"header-anchor",href:"#伸缩动画","aria-hidden":"true"},"#",-1),Q={href:"https://zh.javascript.info/js-animation#shen-suo-dong-hua",target:"_blank",rel:"noopener noreferrer"},X=e(`<p>另一个“伸缩”函数接受附加参数 <code>x</code> 作为“初始范围”。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">elastic</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> timeFraction</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token punctuation">(</span>timeFraction <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> x <span class="token operator">/</span> <span class="token number">3</span> <span class="token operator">*</span> timeFraction<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>x=1.5</code> 时的图像：</strong> <img src="https://zh.javascript.info/article/js-animation/elastic.svg" alt="img"></p><p><code>x=1.5</code> 时的演示</p><iframe class="code-result__iframe" data-trusted="1" src="https://zh.js.cx/article/js-animation/elastic/" style="display:block;border:0px;width:798px;height:40px;background:var(--iframeBg);"></iframe>`,5),Y={href:"https://zh.javascript.info/js-animation#yuan-hu",target:"_blank",rel:"noopener noreferrer"};function Z($,nn){const a=o("ExternalLinkIcon");return c(),i("div",null,[r,u,n("h2",d,[k,s(),n("a",m,[s("使用 requestAnimationFrame"),t(a)])]),v,n("p",null,[s("有一个标准"),n("a",h,[s("动画时序"),t(a)]),s("提供了 "),b,s(" 函数。")]),f,n("p",null,[_,s(" 得到一个参数 —— 从页面加载开始经过的毫秒数。这个时间也可通过调用 "),n("a",g,[s("performance.now()"),t(a)]),s(" 得到。")]),j,n("h2",x,[w,s(),n("a",y,[s("结构化动画"),t(a)])]),F,n("h2",q,[z,s(),n("a",A,[s("时序函数"),t(a)])]),I,B,n("h3",M,[S,s(),n("a",C,[s("n 次幂"),t(a)])]),P,n("h3",E,[N,s(),n("a",V,[s("圆弧"),t(a)])]),L,n("h3",T,[J,s(),n("a",U,[s("反弹：弓箭射击"),t(a)])]),H,n("h3",R,[W,s(),n("a",D,[s("弹跳"),t(a)])]),G,n("h3",K,[O,s(),n("a",Q,[s("伸缩动画"),t(a)])]),X,n("p",null,[n("a",Y,[s("JavaScript 动画"),t(a)])])])}const an=p(l,[["render",Z],["__file","requestAnimationFrame.html.vue"]]);export{an as default};
