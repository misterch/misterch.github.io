import{_ as n,o as s,c as a,a as t}from"./app-d4c6289a.js";const e={},p=t(`<blockquote><ol><li>如何实现本地预览</li><li>如何实现图像的部分上传</li></ol></blockquote><h2 id="图片本地预览" tabindex="-1"><a class="header-anchor" href="#图片本地预览" aria-hidden="true">#</a> 图片本地预览</h2><p><code>FileReader</code>：读取文件数据，使用<code>readAsDataURL()</code>就能读取数据生成一个<code>dataUrl</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> inpFile <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;input[type=&quot;file&quot;]&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.preview&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span>
inpFile<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> file <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">//文件读取完毕，执行onload</span>
  reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    img<span class="token punctuation">.</span>src <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result
    <span class="token comment">// 实现裁剪</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 异步读取文件</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="裁剪图片" tabindex="-1"><a class="header-anchor" href="#裁剪图片" aria-hidden="true">#</a> 裁剪图片</h2><p>使用<code>canvas</code>的<code>drawImage</code>实现图片的裁剪，使用<code>toBlob</code>实现将canvas转换为<strong>文件数据</strong></p><ol><li>原图中裁剪的位置，裁剪的起始位置（X、Y坐标）</li><li>原图中的裁剪宽高，从X、Y位置开始裁剪，得到（X2 = X + Width）（Y2 = Y + Height）</li><li>裁剪结果缩放后的尺寸</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> cutInfo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cutW</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cutH</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
    <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">100</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span>
  canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> cutInfo<span class="token punctuation">.</span>w
  canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> cutInfo<span class="token punctuation">.</span>h
  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">//使用drawImage把图片的部分裁剪出来画到canvas中，从canvas的0,0处开始画，画的宽高就是canvas画布的宽高</span>
  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span>cutInfo<span class="token punctuation">.</span>x<span class="token punctuation">,</span>cutInfo<span class="token punctuation">.</span>y<span class="token punctuation">,</span>cutInfo<span class="token punctuation">.</span>cutW<span class="token punctuation">,</span>cutInfo<span class="token punctuation">.</span>cutH<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>cutInfo<span class="token punctuation">.</span>w<span class="token punctuation">,</span>cutInfo<span class="token punctuation">.</span>h<span class="token punctuation">)</span>
  <span class="token comment">// 转换生成blob对象</span>
  canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span><span class="token parameter">blob</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">//将blob转换为file对象</span>
    <span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span>blob<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;avatar.jpg&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;image/jpeg&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 得到一个file对象，就可以上传文件了</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 测试，把canvas显示到页面</span>
  <span class="token comment">// document.body.appendChild(canvas)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ol><li>使用<code>FileReader</code>的<code>readAsDataURL()</code>把图片文件转换成<code>dataUrl</code>实现本地预览</li><li>使用<code>canvas</code>的<code>drawImage()</code>实现图片的裁剪，从图片的起始坐标开始，裁剪多少宽高，将裁剪后的图片从画布的起始坐标开始画多少的宽高</li><li>将<code>canvas画布</code>使用<code>canvas.toBlob()</code>生成blob文件数据，再使用<code>File</code>API生成一个文件对象</li></ol>`,10),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","uploadFile.html.vue"]]);export{r as default};
