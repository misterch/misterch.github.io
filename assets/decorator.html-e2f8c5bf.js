import{_ as n,o as s,c as a,a as t}from"./app-d4c6289a.js";const p={},e=t(`<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><p>在不改变元对象的基础上，通过对其进行包装扩展（添加属性或者方法）</p><p>在不改变对象的自身基础上，在程序<strong>运行期间</strong>给对象<strong>动态添加</strong>职责。与继承相比，装饰者是一种更加轻便灵活的做法。可以当脚本运行时，在子类中增加行为会影响原有类所有的实例，给不同对象各自添加新行为和属性</p><h3 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h3><p>构造函数需要<strong>一个装饰资源池</strong>，提供相应的装饰方法，提供添加装饰方法的方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">PlaneFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>decorateQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">// ...省略其他代码</span>

<span class="token comment">//集合所有装饰方法</span>
<span class="token class-name">PlaneFactory</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>decorators <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">eatOneLife</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    obj<span class="token punctuation">.</span>blood <span class="token operator">+=</span> <span class="token number">100</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">eatTwoLife</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    obj<span class="token punctuation">.</span>blood <span class="token operator">+=</span> <span class="token number">200</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">eatShrinkLife</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    obj<span class="token punctuation">.</span>blood <span class="token operator">-=</span> <span class="token number">100</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//收集对某个对象的装饰描述</span>
<span class="token class-name">PlaneFactory</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">decorate</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">decorator</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>decorators<span class="token punctuation">[</span>decorator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>decorateQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>decorators<span class="token punctuation">[</span>decorator<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//让装饰方法作用在该对象身上  </span>
<span class="token class-name">PlaneFactory</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
	<span class="token keyword">this</span><span class="token punctuation">.</span>decorateQueue<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">decotator</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">decotator</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> oSp <span class="token operator">=</span> PlaneFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&#39;SmallPlane&#39;</span><span class="token punctuation">)</span>
oSp<span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span><span class="token string">&#39;eatOneLife&#39;</span><span class="token punctuation">)</span>
oSp<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","decorator.html.vue"]]);export{r as default};
