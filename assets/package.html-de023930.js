import{_ as o,r as p,o as i,c as r,b as s,d as n,e,a as t}from"./app-d4c6289a.js";const c={},l=t(`<h2 id="main-module" tabindex="-1"><a class="header-anchor" href="#main-module" aria-hidden="true">#</a> main/module</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> &#39;./dist/index.cjs&#39;<span class="token punctuation">,</span>
  <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> &#39;./src/main.mjs&#39;
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>main：对应commonjs引入方式，即 <code>require/module.exports </code>并指定程序入口文件</p><p>module：对应esmodule引入方式，即 <code>import/export</code>并指定程序入口文件</p><h2 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h2><p>描述该文件所在目录根目录中 <code>.js</code>文件和无拓展名文件的处理方式</p><p>值为<code>esmodule</code>，当做<strong>ES模块处理</strong></p><p>值为<code>commonjs</code>，当做<strong>commonjs模块</strong></p><p>没有定义该字段时，当做<code>commonjs</code>模块处理</p><blockquote><p>但，如果文件为mjs或者cjs时，则按照相对应的规范处理模块</p></blockquote><h2 id="exports" tabindex="-1"><a class="header-anchor" href="#exports" aria-hidden="true">#</a> exports</h2><p>最重要的三个作用：</p><ol><li>作用域包</li><li>子路径模式</li><li>支持条件导出</li></ol><h3 id="作用域包" tabindex="-1"><a class="header-anchor" href="#作用域包" aria-hidden="true">#</a> 作用域包</h3><p>exports和main字段是<strong>互斥</strong>的，如果同时定义了 <code>exports</code>和 <code>main</code>，在node大于等于12.7.0中exports会覆盖main</p><p>注意！！！exports字段生效，package中为导出的文件，是不能引用的，main则可以随意引用包里面的文件，这就是exports作用域包</p><p>当定义了exports字段，所有<strong>子路径都会被封闭</strong></p><h3 id="子路径模式" tabindex="-1"><a class="header-anchor" href="#子路径模式" aria-hidden="true">#</a> 子路径模式</h3><p>子路径被封闭了，但是如果我们需要导出某些子路径时，如按需导入，就需要子路径模式，做路径映射</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;exports&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
  <span class="token property">&quot;.&quot;</span><span class="token operator">:</span><span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;./subpath.js&quot;</span><span class="token operator">:</span><span class="token string">&quot;./subpath.js&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就可以导入除了入口文件之外的包里面的其他已定义子路径的文件</p><h3 id="条件导出" tabindex="-1"><a class="header-anchor" href="#条件导出" aria-hidden="true">#</a> 条件导出</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;exports&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
  <span class="token property">&quot;.&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token property">&quot;import&quot;</span><span class="token operator">:</span><span class="token string">&quot;./index.mjs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;require&quot;</span><span class="token operator">:</span><span class="token string">&quot;./dist/index.cjs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/index.d.ts&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;./plus&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token property">&quot;import&quot;</span><span class="token operator">:</span><span class="token string">&quot;./plus/index.mjs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;require&quot;</span><span class="token operator">:</span><span class="token string">&quot;./dist/plus/index.cjs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/plus/index.d.ts&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成一式两份cjs和mjs" tabindex="-1"><a class="header-anchor" href="#生成一式两份cjs和mjs" aria-hidden="true">#</a> 生成一式两份CJS和MJS</h3><p>使用<strong>tsup</strong>可以零配置结合Typescript使用，可以同时生成mjs和cjs格式文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>tsup src/index.ts <span class="token parameter variable">--format</span> cjs,esm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="发布esm和cjs并存的package" tabindex="-1"><a class="header-anchor" href="#发布esm和cjs并存的package" aria-hidden="true">#</a> 发布ESM和CJS并存的package</h3><p>以前的包模板这样的</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span><span class="token string">&quot;./dist/index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;module&quot;</span><span class="token operator">:</span><span class="token string">&quot;./dist/index.mjs&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;types&quot;</span><span class="token operator">:</span><span class="token string">&quot;./dist/index.d.ts&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29),u=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"TIP"),s("p",null,[s("code",null,"types"),n("字段可以省略，TS默认以main指定的文件夹路径为准，把文件后缀改成 "),s("code",null,".d.ts"),n("查找声明文件")])],-1),d=t(`<p>将来会这样</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;calculator&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/index.mjs&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/index.d.ts&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;exports&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;.&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;require&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/index.js&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;import&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/index.mjs&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/index.d.ts&quot;</span>  
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;./plus&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
       <span class="token property">&quot;require&quot;</span><span class="token operator">:</span><span class="token string">&quot;./dist/plus/index.js&quot;</span><span class="token punctuation">,</span>
       <span class="token property">&quot;import&quot;</span><span class="token operator">:</span><span class="token string">&quot;./dist/plus/index.mjs&quot;</span><span class="token punctuation">,</span>
       <span class="token property">&quot;types&quot;</span><span class="token operator">:</span><span class="token string">&quot;./dist/plus/index.d.ts&quot;</span>
     <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tsup src/index.ts --format cjs,esm --dts --clean&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;watch&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build -- --watch src&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;prepublishOnly&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h2><p>命名规范：</p><ul><li>同一作用域内的包，可以用 <code>.</code>或者 <code>_</code>作为开始字符</li><li>不能使用<strong>大写字</strong>母命名</li><li>不能带有不安全的url字符</li></ul><p>私源npm包命名：</p><p>格式：@[scope]/[name]</p><p>scope：私源</p><p>name：包名</p><h2 id="fiels" tabindex="-1"><a class="header-anchor" href="#fiels" aria-hidden="true">#</a> fiels</h2><p>声明有哪些文件，需要作为依赖项，保存下来</p><p>执行<code>npm publish</code>进行发布的时候，就会将<code>files</code>中的依赖文件也一起上传到npm</p><h2 id="bin" tabindex="-1"><a class="header-anchor" href="#bin" aria-hidden="true">#</a> bin</h2><p>工具性质的npm包，一定要有bin字段，对外暴露脚本命令</p><p>用于生成npm包脚手架工具，当使用者安装这个包后，bin指定的命令就会注册，就可以在命令行工具中使用</p><h2 id="unpkg" tabindex="-1"><a class="header-anchor" href="#unpkg" aria-hidden="true">#</a> unpkg</h2><p>CDN方式下，引入当前npm包的链接。</p><h2 id="workspaces" tabindex="-1"><a class="header-anchor" href="#workspaces" aria-hidden="true">#</a> workspaces</h2><p><code>monorepo</code>类型的项目，需要用到 <code>workspaces</code>。它可以告知其他工具，当前项目的工作区间在哪里。</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,20),k={href:"https://juejin.cn/post/7108985001529573412",target:"_blank",rel:"noopener noreferrer"},m={href:"https://juejin.cn/post/7037386586899611684",target:"_blank",rel:"noopener noreferrer"};function v(q,h){const a=p("ExternalLinkIcon");return i(),r("div",null,[l,u,d,s("p",null,[s("a",k,[n("高级前端必须掌握的package.json字段知识 - 掘金 (juejin.cn)"),e(a)])]),s("p",null,[s("a",m,[n("发布一个 ESM 和 CJS 并存的 package - 掘金 (juejin.cn)"),e(a)])])])}const g=o(c,[["render",v],["__file","package.html.vue"]]);export{g as default};
