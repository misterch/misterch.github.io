import{_ as e,o as a,c as r,a as s}from"./app-d4c6289a.js";const n={},d=s('<p>在node中使用<code>global</code>定义全局变量，定义的变量可以在引入的文件中访问到。</p><p>ECMA2020出现的<code>globalThis</code>全局变量可以根据node环境或者浏览器环境切换</p><h2 id="dirname" tabindex="-1"><a class="header-anchor" href="#dirname" aria-hidden="true">#</a> __dirname</h2><p>当前文件模块所在绝对路径<strong>不含文件名</strong></p><h2 id="filename" tabindex="-1"><a class="header-anchor" href="#filename" aria-hidden="true">#</a> __filename</h2><p>当前文件模块所在绝对路径<strong>含文件名</strong></p><h2 id="process" tabindex="-1"><a class="header-anchor" href="#process" aria-hidden="true">#</a> process</h2><h3 id="process-argv" tabindex="-1"><a class="header-anchor" href="#process-argv" aria-hidden="true">#</a> process.argv</h3><p>包含命令行参数的数组</p><p>数组第一个：nodejs的执行路径</p><p>数组第二个：当前执行的js文件的路径</p><p>之后的：传递给脚本的命令行参数</p><h3 id="process-env" tabindex="-1"><a class="header-anchor" href="#process-env" aria-hidden="true">#</a> p<wbr>rocess.env</h3><p>包含当前<strong>环境变量的对象</strong>，通过这个对象访问操作环境变量</p><h3 id="process-cwd" tabindex="-1"><a class="header-anchor" href="#process-cwd" aria-hidden="true">#</a> process.cwd()</h3><p>返回当前<strong>工作目录</strong>路径</p><h3 id="process-on-event-listener" tabindex="-1"><a class="header-anchor" href="#process-on-event-listener" aria-hidden="true">#</a> process.on(event,listener)</h3><p>用于注册事件监听器。可以监听如exit、uncaughtException等事件，并在事件发生时执行相应的回调函数</p><h3 id="process-exit" tabindex="-1"><a class="header-anchor" href="#process-exit" aria-hidden="true">#</a> process.exit()</h3><p>用于退出当前的nodejs进程。可以提供一个可选的退出码作为参数</p><h3 id="process-pid" tabindex="-1"><a class="header-anchor" href="#process-pid" aria-hidden="true">#</a> process.pid</h3><p>这个属性返回当前进程的PID</p><h2 id="buffer" tabindex="-1"><a class="header-anchor" href="#buffer" aria-hidden="true">#</a> Buffer</h2>',23),o=[d];function c(h,i){return a(),r("div",null,o)}const p=e(n,[["render",c],["__file","globalVar.html.vue"]]);export{p as default};
