import{_ as v,r as o,o as h,c as b,b as s,e as n,w as a,d as e,a as p}from"./app-d4c6289a.js";const _={},g=p(`<h2 id="原码" tabindex="-1"><a class="header-anchor" href="#原码" aria-hidden="true">#</a> 原码</h2><p>是最简单的机器数表示法，用最高位表示符号位，其他位存放该数的二进制的绝对值。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//十进制转二进制</span>
<span class="token number">2</span> <span class="token operator">=</span> <span class="token number">0010</span>
<span class="token operator">-</span><span class="token number">2</span> <span class="token operator">=</span> <span class="token number">1010</span>

<span class="token number">1</span><span class="token operator">+</span><span class="token number">2</span> <span class="token operator">=</span> <span class="token number">0001</span> <span class="token operator">+</span> <span class="token number">0010</span> <span class="token operator">=</span> <span class="token number">0011</span>
<span class="token number">0</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0000</span> <span class="token operator">+</span> <span class="token number">1000</span> <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0</span>
<span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0001</span> <span class="token operator">+</span> <span class="token number">1001</span> <span class="token operator">=</span> <span class="token number">1010</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="反码" tabindex="-1"><a class="header-anchor" href="#反码" aria-hidden="true">#</a> 反码</h2>`,4),x=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"TIP"),s("p",null,"正数的反码和原码是一样"),s("p",null,"负数的反码是在其原码的基础上, 符号位不变，其余各个位取反")],-1),f=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//十进制3</span>
<span class="token comment">//二进制原码</span>
<span class="token number">0000</span> <span class="token number">0011</span>
<span class="token comment">//反码</span>
<span class="token number">0000</span> <span class="token number">0011</span>

<span class="token comment">//十进制-3</span>
<span class="token comment">//符号位取反</span>
<span class="token number">1000</span> <span class="token number">0011</span>
<span class="token comment">//反码</span>
<span class="token number">1111</span> <span class="token number">1100</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="补码" tabindex="-1"><a class="header-anchor" href="#补码" aria-hidden="true">#</a> 补码</h2>`,2),y=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"TIP"),s("p",null,[s("strong",null,"补码=反码+1")]),s("p",null,"正数的补码和原码一样"),s("p",null,[e("计算机以"),s("strong",null,"补码储存二进制")])],-1),w=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//3的原码，正数原反补都都一样</span>
<span class="token number">0000</span> <span class="token number">0011</span>
<span class="token comment">//反码</span>
<span class="token number">0000</span> <span class="token number">0011</span>
<span class="token comment">//补码</span>
<span class="token number">0000</span> <span class="token number">0011</span>
<span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span>
<span class="token comment">//-3的真码，是拿正数3最高位设置成1,1表示负数</span>
<span class="token number">1000</span> <span class="token number">0011</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token comment">//真码</span>

<span class="token comment">//计算机储存的是补码，-3需要转换成补码储存</span>

<span class="token comment">//-3真码取反,除最高位，其余都反码</span>
<span class="token number">1111</span> <span class="token number">1100</span> <span class="token comment">//反码</span>

<span class="token comment">//反码+1=补码</span>
<span class="token number">1111</span> <span class="token number">1100</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1111</span> <span class="token number">1101</span>
<span class="token comment">//计算机最终储存的值是 1111 1101</span>
<span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">===</span><span class="token operator">=</span>
<span class="token comment">//补码转成真码</span>
<span class="token comment">//先转成反码，即反码= 补码-1</span>
<span class="token number">1111</span> <span class="token number">1101</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1111</span> <span class="token number">1100</span>
<span class="token comment">//反码转真码，除最高位，其余取反</span>
<span class="token number">1000</span> <span class="token number">0011</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结论" tabindex="-1"><a class="header-anchor" href="#结论" aria-hidden="true">#</a> 结论</h2><p>计算机以补码储存二进制</p><p>正数原反补都相同</p><p>负数=补码=反码+1</p><table><thead><tr><th style="text-align:center;">十进制</th><th style="text-align:center;">二进制</th><th style="text-align:center;">原码</th><th style="text-align:center;">反码（除符号位，其余取反）</th><th style="text-align:center;">补码(反码+1)</th></tr></thead><tbody><tr><td style="text-align:center;">正数2</td><td style="text-align:center;">0010</td><td style="text-align:center;">0010</td><td style="text-align:center;">0010</td><td style="text-align:center;">0010</td></tr><tr><td style="text-align:center;">负数2</td><td style="text-align:center;">1010</td><td style="text-align:center;">1010</td><td style="text-align:center;">1101</td><td style="text-align:center;">1110</td></tr></tbody></table><h2 id="位运算-与" tabindex="-1"><a class="header-anchor" href="#位运算-与" aria-hidden="true">#</a> 位运算&amp;与</h2><p>二进制对应两位进行逻辑AND运算</p>`,8),z=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"TIP"),s("p",null,"同为1才为1，其他都为0"),s("p",null,[e("与运算相当于对应位"),s("strong",null,"相加之后的进位")])],-1),j=p(`<p>0&amp;0=0</p><p>0&amp;1=0</p><p>1&amp;1=1</p><h3 id="判断奇偶" tabindex="-1"><a class="header-anchor" href="#判断奇偶" aria-hidden="true">#</a> 判断奇偶</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//判断一个整数的二进制补码尾部是否【等于1】，等于1即为奇数</span>
<span class="token constant">X</span> <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">===</span> <span class="token constant">X</span> <span class="token operator">%</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="一个整数是否是2的幂" tabindex="-1"><a class="header-anchor" href="#一个整数是否是2的幂" aria-hidden="true">#</a> 一个整数是否是2的幂</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//如果一个数是2的幂，那么必然是1后面接若干个0</span>
<span class="token comment">//结果等于0则是2的幂</span>
n <span class="token operator">&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="位运算-或" tabindex="-1"><a class="header-anchor" href="#位运算-或" aria-hidden="true">#</a> 位运算|或</h2><p>二进制对应两位进行逻辑OR运算</p>`,9),E=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"TIP"),s("p",null,"同为0才为0，其他都为1")],-1),T=p(`<p>0|0=0</p><p>1|0=1</p><p>1|1=1</p><h3 id="开关" tabindex="-1"><a class="header-anchor" href="#开关" aria-hidden="true">#</a> 开关</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//有三种开关的状态，可以用2位即2bit表示</span>
<span class="token comment">//2bit可以最多表示4中状态2^2=4</span>
<span class="token comment">// 四种状态为：00,01,10,11</span>
<span class="token keyword">let</span> permission <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">read</span><span class="token operator">:</span> <span class="token number">0b01</span><span class="token punctuation">,</span>
	<span class="token literal-property property">whrite</span><span class="token operator">:</span> <span class="token number">0b10</span><span class="token punctuation">,</span>
	<span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token number">0b11</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> readAndWrite <span class="token operator">=</span> permission<span class="token punctuation">.</span>read <span class="token operator">|</span> permission<span class="token punctuation">.</span>write <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">===</span> <span class="token number">0b11</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="位运算-异或" tabindex="-1"><a class="header-anchor" href="#位运算-异或" aria-hidden="true">#</a> 位运算^异或</h2><p>二进制对应两位进行逻辑XOR运算</p>`,7),M=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"TIP"),s("p",null,"相同为0，不同为1"),s("p",null,[e("相当于位"),s("strong",null,"相加")]),s("p",null,"两个相同数异或，结果为0"),s("p",null,"非0的数与0异或，结果为数字本身")],-1),R=p(`<p>0^0=0</p><p>1^1=0</p><p>0^1=1</p><h3 id="交换两个数的值" tabindex="-1"><a class="header-anchor" href="#交换两个数的值" aria-hidden="true">#</a> 交换两个数的值</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">20</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">30</span>
<span class="token comment">//不借助临时变量，使用异或位运算</span>
a <span class="token operator">=</span> a<span class="token operator">^</span>b <span class="token comment">//10-&gt;0000 1010</span>
b <span class="token operator">=</span> a<span class="token operator">^</span>b <span class="token comment">//20-&gt;0001 0100</span>
a <span class="token operator">=</span> a<span class="token operator">^</span>b <span class="token comment">//30-&gt;0001 1110</span>

<span class="token comment">//使用ES6解构</span>
<span class="token punctuation">[</span>b<span class="token punctuation">,</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span>


<span class="token comment">//使用加减运算</span>
a <span class="token operator">=</span> a <span class="token operator">+</span> b <span class="token comment">//得到两数的和</span>
b <span class="token operator">=</span> a <span class="token operator">-</span> b <span class="token comment">//两数和减去b的数，现在b等于a的数</span>
a <span class="token operator">=</span> a <span class="token operator">-</span> b <span class="token comment">//两数和减去b的数，现在a等于b的数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="位运算-取反" tabindex="-1"><a class="header-anchor" href="#位运算-取反" aria-hidden="true">#</a> 位运算~取反</h2><p>二进制运算0变成1,1变成0</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//对1取相反数</span>

<span class="token comment">//1的二进制为</span>
<span class="token number">1</span><span class="token operator">===</span><span class="token number">0000</span> <span class="token number">0001</span>
<span class="token comment">//对1的二进制取反</span>
<span class="token operator">~</span><span class="token number">1</span> <span class="token number">1111</span> <span class="token number">1110</span> <span class="token comment">//这得到的是计算机储存的【补码】，要转换成【真码】才能得到十进制</span>
<span class="token comment">//对1111 1110补码转换成反码，反码=补码-1</span>
<span class="token number">1111</span> <span class="token number">1101</span>
<span class="token comment">//反码转成真码（原码），符号位不变，其余取反</span>
<span class="token number">1000</span> <span class="token number">0010</span>
<span class="token comment">//转换成十进制是</span>
<span class="token operator">-</span><span class="token number">2</span>
<span class="token operator">~</span><span class="token number">1</span><span class="token operator">===</span><span class="token operator">-</span><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),I=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"TIP"),s("p",null,"~n=-(n+1)")],-1),P=p(`<h3 id="取相反数" tabindex="-1"><a class="header-anchor" href="#取相反数" aria-hidden="true">#</a> 取相反数</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//对12去相反数</span>
<span class="token operator">~</span><span class="token number">12</span><span class="token operator">+</span><span class="token number">1</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="小数快速取整" tabindex="-1"><a class="header-anchor" href="#小数快速取整" aria-hidden="true">#</a> 小数快速取整</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//12.21545158</span>
<span class="token operator">~</span><span class="token number">12.21545158</span> <span class="token operator">=&gt;</span> 取出整数部分<span class="token number">12</span>，<span class="token number">12</span>取反即<span class="token operator">~</span><span class="token number">12</span>最终结果为<span class="token operator">-</span><span class="token number">13</span>
再对<span class="token operator">-</span><span class="token number">13</span>取反
<span class="token operator">~</span><span class="token operator">-</span><span class="token number">13</span> <span class="token operator">===</span> <span class="token number">13</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">===</span> <span class="token number">12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="左移运算符" tabindex="-1"><a class="header-anchor" href="#左移运算符" aria-hidden="true">#</a> 左移运算符&lt;&lt;</h2><p>运算格式：被执行左移的十进制数 &lt;&lt; 需要左移位数</p>`,6),B={class:"custom-container tip"},D=s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])],-1),A=s("p",{class:"custom-container-title"},"总结",-1),C=s("p",null,[e("被执行左移的十进制数转换成二进制，整体"),s("strong",null,"左移"),e("，在"),s("strong",null,"最右边补0")],-1),W=s("p",null,"整数m左移n位，相当于2的n次方乘以m",-1),N={class:"katex-display"},V={class:"katex"},U={class:"katex-mathml"},X=p('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit">m</span><span class="mrel">&lt;</span><span class="mrel">&lt;</span><span class="mord mathit">n</span><span class="mrel">=</span><span class="mord mathit">m</span><span class="mbin">∗</span><span class="mopen">(</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span>',1),L=s("p",null,"如3<<4",-1),O=s("p",null,"二进制表示整数3：0011",-1),S=s("p",null,"左移4位即：0011 0000 ，转成十进制即48",-1),q=s("p",null,"十进制表示即：",-1),F={class:"katex-display"},G={class:"katex"},H={class:"katex-mathml"},J=p('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8641079999999999em;"></span><span class="strut bottom" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathrm">3</span><span class="mbin">∗</span><span class="mord mathrm">2</span><span class="mbin">∗</span><span class="mord mathrm">2</span><span class="mbin">∗</span><span class="mord mathrm">2</span><span class="mbin">∗</span><span class="mord mathrm">2</span><span class="mrel">=</span><span class="mord mathrm">3</span><span class="mbin">∗</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">4</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),K=s("h3",{id:"m-2-n",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#m-2-n","aria-hidden":"true"},"#"),e(" m*(2^n)")],-1),Q=s("h2",{id:"右移运算符",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#右移运算符","aria-hidden":"true"},"#"),e(" 右移运算符>>")],-1),Y=s("p",null,"运算格式：被执行右移的十进制数 >> 需要右移位数",-1),Z={class:"custom-container tip"},$=s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])],-1),ss=s("p",{class:"custom-container-title"},"总结",-1),ns=s("p",null,[e("运算规则：被执行右移的十进制数转换成二进制，整体"),s("strong",null,"右移"),e("，在"),s("strong",null,"最左边补0")],-1),as=s("p",null,[e("整数m右移n位，相当于m"),s("strong",null,"除以"),e("2的n次方")],-1),es={class:"katex-display"},ts={class:"katex"},ls={class:"katex-mathml"},ps=p('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.10756em;"></span><span class="strut bottom" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit">m</span><span class="mrel">&gt;</span><span class="mrel">&gt;</span><span class="mord mathit">n</span><span class="mrel">=</span><span class="mord displaystyle textstyle uncramped"><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit">m</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span>',1),os=s("p",null,"如100>>3",-1),rs=s("p",null,"二进制表示整数100：0110 0100",-1),cs=s("p",null,"右移3位即：0000 1100，转换成十进制即12",-1),is=s("p",null,"十进制表示即：",-1),ds={class:"katex-display"},ms={class:"katex"},us={class:"katex-mathml"},ks=p('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8641079999999999em;"></span><span class="strut bottom" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathrm">1</span><span class="mord mathrm">0</span><span class="mord mathrm">0</span><span class="mbin">÷</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),vs=p(`<h3 id="m-2-n-1" tabindex="-1"><a class="header-anchor" href="#m-2-n-1" aria-hidden="true">#</a> m/2^n</h3><h2 id="无符号右移动" tabindex="-1"><a class="header-anchor" href="#无符号右移动" aria-hidden="true">#</a> 无符号右移动&gt;&gt;&gt;</h2><h2 id="位运算实现权限组合" tabindex="-1"><a class="header-anchor" href="#位运算实现权限组合" aria-hidden="true">#</a> 位运算实现权限组合</h2><p>利用位运算，每一个位可以代表一个权限，关键在于可以互相组合出新的权限组合而不用新建组合</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">READ</span>   <span class="token operator">=</span> <span class="token number">0b0001</span> <span class="token comment">//十进制1</span>
<span class="token keyword">const</span> <span class="token constant">WRITE</span>  <span class="token operator">=</span> <span class="token number">0b0010</span> <span class="token comment">//十进制2</span>
<span class="token keyword">const</span> <span class="token constant">UPDATE</span> <span class="token operator">=</span> <span class="token number">0b0100</span> <span class="token comment">//十进制4</span>
<span class="token keyword">const</span> <span class="token constant">DEL</span>    <span class="token operator">=</span> <span class="token number">0b1000</span> <span class="token comment">//十进制8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="或运算-组合权限" tabindex="-1"><a class="header-anchor" href="#或运算-组合权限" aria-hidden="true">#</a> 或运算（|）==&gt; 组合权限</h3><p>或运算，同0为0，有1为1</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 用户权限可读可写</span>
<span class="token keyword">const</span> user1Permission <span class="token operator">=</span> <span class="token constant">READ</span><span class="token operator">|</span><span class="token constant">WRITE</span> <span class="token comment">// 0b0011</span>
<span class="token comment">//超级用户拥有所有权限</span>
<span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token constant">READ</span><span class="token operator">|</span><span class="token constant">WRITE</span><span class="token operator">|</span><span class="token constant">UPDATE</span><span class="token operator">|</span><span class="token constant">DEL</span> <span class="token comment">// 0b1111</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="与运算-判断是否有权限" tabindex="-1"><a class="header-anchor" href="#与运算-判断是否有权限" aria-hidden="true">#</a> 与运算（&amp;）==&gt; 判断是否有权限</h3><p>与运算，同1为1，其他为0</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> user1Permission <span class="token operator">=</span> <span class="token constant">READ</span><span class="token operator">|</span><span class="token constant">WRITE</span> <span class="token comment">// 0b0011</span>
user1Permission <span class="token operator">&amp;</span> <span class="token constant">WRITE</span> <span class="token comment">// 2，即 0b0011 &amp; 0b0010 =&gt; 0b0010 = 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>结果等于2，即等于WRITE的值，表示具有此权限</p><h3 id="异或运算-删除或新增权限" tabindex="-1"><a class="header-anchor" href="#异或运算-删除或新增权限" aria-hidden="true">#</a> 异或运算（^）==&gt; 删除或新增权限</h3><p>异或运算，相同为0，不同为1</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>root <span class="token operator">^=</span> del <span class="token comment">// 0b1111^0b1000 = 0b0111 = 7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果等于7，即(READ | WRITE | UPDATE)的组合结果</p>`,16);function hs(bs,_s){const r=o("mi"),t=o("mo"),l=o("mn"),i=o("msup"),c=o("mrow"),d=o("annotation"),m=o("semantics"),u=o("math"),k=o("mfrac");return h(),b("div",null,[g,x,f,y,w,z,j,E,T,M,R,I,P,s("div",B,[D,A,C,W,s("p",null,[s("span",N,[s("span",V,[s("span",U,[n(u,null,{default:a(()=>[n(m,null,{default:a(()=>[n(c,null,{default:a(()=>[n(r,null,{default:a(()=>[e("m")]),_:1}),n(t,null,{default:a(()=>[e("<")]),_:1}),n(t,null,{default:a(()=>[e("<")]),_:1}),n(r,null,{default:a(()=>[e("n")]),_:1}),n(t,null,{default:a(()=>[e("=")]),_:1}),n(r,null,{default:a(()=>[e("m")]),_:1}),n(t,null,{default:a(()=>[e("∗")]),_:1}),n(t,null,{default:a(()=>[e("(")]),_:1}),n(i,null,{default:a(()=>[n(l,null,{default:a(()=>[e("2")]),_:1}),n(r,null,{default:a(()=>[e("n")]),_:1})]),_:1}),n(t,null,{default:a(()=>[e(")")]),_:1})]),_:1}),n(d,{encoding:"application/x-tex"},{default:a(()=>[e("m<<n=m*(2^n) ")]),_:1})]),_:1})]),_:1})]),X])])])]),L,O,S,q,s("p",null,[s("span",F,[s("span",G,[s("span",H,[n(u,null,{default:a(()=>[n(m,null,{default:a(()=>[n(c,null,{default:a(()=>[n(l,null,{default:a(()=>[e("3")]),_:1}),n(t,null,{default:a(()=>[e("∗")]),_:1}),n(l,null,{default:a(()=>[e("2")]),_:1}),n(t,null,{default:a(()=>[e("∗")]),_:1}),n(l,null,{default:a(()=>[e("2")]),_:1}),n(t,null,{default:a(()=>[e("∗")]),_:1}),n(l,null,{default:a(()=>[e("2")]),_:1}),n(t,null,{default:a(()=>[e("∗")]),_:1}),n(l,null,{default:a(()=>[e("2")]),_:1}),n(t,null,{default:a(()=>[e("=")]),_:1}),n(l,null,{default:a(()=>[e("3")]),_:1}),n(t,null,{default:a(()=>[e("∗")]),_:1}),n(i,null,{default:a(()=>[n(l,null,{default:a(()=>[e("2")]),_:1}),n(l,null,{default:a(()=>[e("4")]),_:1})]),_:1})]),_:1}),n(d,{encoding:"application/x-tex"},{default:a(()=>[e("3 * 2 * 2 * 2 * 2 = 3 * 2^4 ")]),_:1})]),_:1})]),_:1})]),J])])]),K,Q,Y,s("div",Z,[$,ss,ns,as,s("p",null,[s("span",es,[s("span",ts,[s("span",ls,[n(u,null,{default:a(()=>[n(m,null,{default:a(()=>[n(c,null,{default:a(()=>[n(r,null,{default:a(()=>[e("m")]),_:1}),n(t,null,{default:a(()=>[e(">")]),_:1}),n(t,null,{default:a(()=>[e(">")]),_:1}),n(r,null,{default:a(()=>[e("n")]),_:1}),n(t,null,{default:a(()=>[e("=")]),_:1}),n(c,null,{default:a(()=>[n(k,null,{default:a(()=>[n(c,null,{default:a(()=>[n(r,null,{default:a(()=>[e("m")]),_:1})]),_:1}),n(c,null,{default:a(()=>[n(i,null,{default:a(()=>[n(l,null,{default:a(()=>[e("2")]),_:1}),n(r,null,{default:a(()=>[e("n")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),n(d,{encoding:"application/x-tex"},{default:a(()=>[e("m>>n={m \\over 2^n} ")]),_:1})]),_:1})]),_:1})]),ps])])])]),os,rs,cs,is,s("p",null,[s("span",ds,[s("span",ms,[s("span",us,[n(u,null,{default:a(()=>[n(m,null,{default:a(()=>[n(c,null,{default:a(()=>[n(l,null,{default:a(()=>[e("1")]),_:1}),n(l,null,{default:a(()=>[e("0")]),_:1}),n(l,null,{default:a(()=>[e("0")]),_:1}),n(t,null,{default:a(()=>[e("÷")]),_:1}),n(i,null,{default:a(()=>[n(l,null,{default:a(()=>[e("2")]),_:1}),n(l,null,{default:a(()=>[e("3")]),_:1})]),_:1})]),_:1}),n(d,{encoding:"application/x-tex"},{default:a(()=>[e("100 \\div 2 ^ 3 ")]),_:1})]),_:1})]),_:1})]),ks])])]),vs])}const xs=v(_,[["render",hs],["__file","bitoperation.html.vue"]]);export{xs as default};
