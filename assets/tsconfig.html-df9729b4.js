import{_ as e,o as s,c as o,a as n}from"./app-d4c6289a.js";const t={},c=n(`<h2 id="include" tabindex="-1"><a class="header-anchor" href="#include" aria-hidden="true">#</a> include</h2><p><code>include</code>属性指定所要编译的文件列表，既支持逐一列出文件，也支持通配符。文件位置相对于当前配置文件而定。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//tsconfig.json</span>
<span class="token punctuation">{</span>
  <span class="token string-property property">&quot;include&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token string">&quot;src/**/*.ts&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>include支持三种通配符</p><ul><li>?：指代单个字符</li><li>*：指代任意字符，不含路径分隔符</li><li>**：指定任意目录层级</li></ul><p>如果不指定后缀名，默认包括<code>.ts</code>、<code>.tsx</code>、<code>.d.ts</code>，打开<code>allowJs</code>，则还包括<code>.js</code>和<code>.jsx</code></p><h2 id="typeroots" tabindex="-1"><a class="header-anchor" href="#typeroots" aria-hidden="true">#</a> typeRoots</h2><p><code>typeRoots</code>设置类型模块所在的目录，默认是<code>node_modules/@types</code>。</p><p><code>typeRoots</code>用来指定声明文件或文件夹的路径列表，如果指定了此项，则只有在这里列出的声明文件才会被加载</p><h2 id="types" tabindex="-1"><a class="header-anchor" href="#types" aria-hidden="true">#</a> types</h2><p><code>types</code>设置<code>typeRoots</code>目录下需要包括在编译之中的类型声明模块。默认情况下，该目录下的所有类型模块，都会自动包括在编译之中。</p><p>如果设置了这个选项，那么只有指定的类型声明模块才会被包括，否则typeRoots设置的目录下的其他类型声明模块不会被包括</p><p>‼️注意：</p><ol><li>必须为<code>.d.ts</code>类型声明模块</li><li>这是<strong>声明模块</strong>，是有<code>export</code>和<code>import</code>的</li></ol>`,14),d=[c];function a(i,p){return s(),o("div",null,d)}const r=e(t,[["render",a],["__file","tsconfig.html.vue"]]);export{r as default};
