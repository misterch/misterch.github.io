import{_ as n,o as s,c as a,a as e}from"./app-d4c6289a.js";const p={},t=e(`<h2 id="以对象方式构建模块" tabindex="-1"><a class="header-anchor" href="#以对象方式构建模块" aria-hidden="true">#</a> 以对象方式构建模块</h2><p>webpack将每个模块构建成一个modules对象，key表示模块的路径，value表示模块内的内容，是一个函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> modules <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;./src/a.js&quot;</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span>exports</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;module a&#39;</span><span class="token punctuation">)</span>
    module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;./src/index.js&quot;</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span>exports<span class="token punctuation">,</span>require</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;index module&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/a.js&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么<code>module</code>，<code>exports</code>，<code>require</code>是从哪里来的呢？</p><p>这样定义的modules不是污染全局吗？</p><h2 id="解决全局污染" tabindex="-1"><a class="header-anchor" href="#解决全局污染" aria-hidden="true">#</a> 解决全局污染</h2><p>有了这个<code>modules</code>对象，就可以传递给执行这些模块的函数了。</p><p>这个函数是一个IIFE函数，避免了全局污染问题</p><p>将<code>modules</code>对象不使用变量，直接将其以参数传入，也解决了污染全局问题</p><p><code>module</code>，<code>exports</code>，<code>require</code>就是在立即执行函数中实现</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">modules</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> moduleExports <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//用于缓存模块的导出结果</span>
  <span class="token keyword">function</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token parameter">moduleId</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>moduleExports<span class="token punctuation">[</span>moduleId<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> moduleExports<span class="token punctuation">[</span>moduleId<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> func <span class="token operator">=</span> modules<span class="token punctuation">[</span>moduleId<span class="token punctuation">]</span>
    <span class="token keyword">var</span> module <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">exports</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//运行模块</span>
    <span class="token function">func</span><span class="token punctuation">(</span>module<span class="token punctuation">,</span>module<span class="token punctuation">.</span>exports<span class="token punctuation">,</span>require<span class="token punctuation">)</span>
    <span class="token comment">//得到模块的导出结果</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> module<span class="token punctuation">.</span>exports
    moduleExports<span class="token punctuation">[</span>moduleId<span class="token punctuation">]</span> <span class="token operator">=</span> result
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
  <span class="token comment">//执行入口模块</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;./src/a.js&quot;</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span>exports</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;module a&#39;</span><span class="token punctuation">)</span>
    module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;./src/index.js&quot;</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span>exports<span class="token punctuation">,</span>require</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;index module&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/a.js&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编译结果中的eval" tabindex="-1"><a class="header-anchor" href="#编译结果中的eval" aria-hidden="true">#</a> 编译结果中的eval</h2><blockquote><p>原因：方便调试，因为在浏览器中eval函数的执行环境有别于正常的执行环境，eval函数中所写的代码如果出现报错，就可以在这个eval的执行环境中调试</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&#39;1&#39;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2</span>
<span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&quot;var d = null;\\nd.abc();&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>浏览器执行这段代码时报错，因为d没有abc函数 可以在浏览器中查看出错位置的源代码，是这样的</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
d<span class="token punctuation">.</span><span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>代码中不存在<code>var a = &#39;1&#39;;var b=2</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&quot;var d = null;\\nd.abc();//# sourceURL=./src/a/js&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>//# sourceURL=./src/a/js</code>告诉浏览器源代码所在位置，方便开发者定位到代码所在文件</p>`,19),o=[t];function c(l,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","compileResult.html.vue"]]);export{r as default};
