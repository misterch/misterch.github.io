import{_ as s,o as a,c as t,a as e,b as n}from"./app-d4c6289a.js";const p={},o=e(`<h2 id="path" tabindex="-1"><a class="header-anchor" href="#path" aria-hidden="true">#</a> path</h2><p><code>process.cwd()</code>：是获取node执行时所在的目录路径</p><p><code>__dirname</code>：获取当前文件所在的目录路径</p><h3 id="path-join" tabindex="-1"><a class="header-anchor" href="#path-join" aria-hidden="true">#</a> path.join</h3><p>将路径拼接成<strong>相对路径</strong></p><p>不管是以<code>/</code>，<code>./</code>，<code>x/</code>开头，都不会影响最终拼接出来的结果</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span> <span class="token comment">// a/b/c</span>
path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;/a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;/b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;./c&#39;</span><span class="token punctuation">)</span> <span class="token comment">// a/b/c</span>
path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;../b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span> <span class="token comment">// b/c</span>

<span class="token comment">//使用__dirname获取当前文件所在目录，拼接绝对路径</span>
path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;/b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;./c&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//C:/project/test/a/b/c</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-resolve" tabindex="-1"><a class="header-anchor" href="#path-resolve" aria-hidden="true">#</a> path.resolve</h3><p>将路径拼接成<strong>绝对路径</strong></p><p><code>/</code>开头则表示为<strong>根目录</strong>，当遇到以/开头的路径就以这个路径为绝对路径的根路径</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//test.js</span>
<span class="token comment">//当前文件所在目录C:/project/test/</span>

<span class="token comment">// 遇到/开头则以/作为根拼接</span>
path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;/a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span> <span class="token comment">// C:/a/b</span>
path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span> <span class="token comment">// C:/b/c</span>

<span class="token comment">// 如果是’./‘或者’a/‘的写法，则拼接在当前文件路径的后面</span>
path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span> <span class="token comment">// C:/project/test/a/b</span>
path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;./b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span> <span class="token comment">// C:/project/test/a/b/c</span>

path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;/a/b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/c/d&quot;</span><span class="token punctuation">)</span> <span class="token comment">// C:/c/d</span>

path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;../a&quot;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span> <span class="token comment">// C:/project/a/b</span>

path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&#39;./main.js&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//C:/project/test/main.js</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-basename" tabindex="-1"><a class="header-anchor" href="#path-basename" aria-hidden="true">#</a> path.basename</h3><p><code>path.basename(path[,suffix])</code> 作用：获取路径path最后的一部分，可能是文件名 参数：suffix要删除的可选后缀</p><h3 id="path-extname" tabindex="-1"><a class="header-anchor" href="#path-extname" aria-hidden="true">#</a> path.extname</h3><h2 id="fs" tabindex="-1"><a class="header-anchor" href="#fs" aria-hidden="true">#</a> fs</h2><p>fs.readFile()</p><p>fs.writeFile()</p><p>fs.readFileSync()</p><p>fs.writeFileSync()</p><p>fs.renameSync(oldname,newname)</p><h2 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> http</h2><h3 id="request对象" tabindex="-1"><a class="header-anchor" href="#request对象" aria-hidden="true">#</a> request对象</h3><p>来自客户端的请求</p><h4 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get</h4><p>使用node的url库的<code>url.parse(request.url)</code>可以解析出请求参数</p><p><strong>原生node的request没有query对象</strong></p><h4 id="post" tabindex="-1"><a class="header-anchor" href="#post" aria-hidden="true">#</a> post</h4><p>通过<code>on(&#39;data&#39;)</code>事件获取post请求参数</p><p>获得的参数对象是buffer类型对象，需要<code>toString()</code>转换</p>`,29),c=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"乱码"),n("p",null,"出现中文乱码问题，需要设置响应头"),n("p",null,[n("code",null,'Content-type:"text/html;charset=utf-8"')])],-1),i=[o,c];function l(u,r){return a(),t("div",null,i)}const k=s(p,[["render",l],["__file","innerModule.html.vue"]]);export{k as default};
