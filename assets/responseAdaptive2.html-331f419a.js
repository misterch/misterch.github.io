import{_ as n,o as s,c as a,a as t}from"./app-d4c6289a.js";const p={},e=t(`<p>在前面，我们已经介绍了移动端的一些基础知识，以及 <em>viewport</em> 视口，接下来我们就要来说一说什么是移动端适配了。</p><p>所谓适配，其实概念很简单，就是在任意手机中我们的网页显示都是正常的。</p><p>举个例子：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span><span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.container</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 375px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的页面，如果在 <em>iPhone6/7/8</em> 中进行查看，一切正常，因为 <em>iPhone6/7/8</em> 的设备宽度就是 <em>375px</em>。</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-02-28-063934.png" alt="image-20220228143933168" style="zoom:50%;"><p>但是倘若换到 <em>iPhone6/7/8 Plus</em> 中，由于设备宽度为 <em>414px</em>，就会导致 <em>375px</em> 的宽度并不能占满整个屏幕。</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-02-28-063956.png" alt="image-20220228143955961" style="zoom:50%;"><p>因此，正如前面所说，适配的任务就是要让我们的网页在各个设备中都能显示正常，包括：</p><ol><li>字体</li><li>宽高</li><li>间距</li><li>图像（图标、图片）</li></ol><p>常见的适配方案很多，这里列举出常用的 <em>5</em> 种适配方案，分别是：</p><ul><li>百分比适配</li><li><em>viewport</em> 缩放适配</li><li><em>DPR</em> 缩放适配</li><li><em>rem</em> 适配</li><li><em>vw、vh</em> 适配</li></ul><h2 id="百分比适配" tabindex="-1"><a class="header-anchor" href="#百分比适配" aria-hidden="true">#</a> 百分比适配</h2><p>首先我们来看第一种适配方案，百分比适配。</p><p>在 <em>CSS</em> 中盒子的宽度可以设置为一个百分比值，表示根据父级宽度的百分比来计算宽度。因此我们可以通过百分比的方式让一个盒子在任何设备中宽度占比都是一样的。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 25%<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">div:nth-child(1)</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">div:nth-child(2)</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">div:nth-child(3)</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">div:nth-child(4)</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，我们设置了 <em>4</em> 个盒子，每个盒子的宽度占比为 <em>25%</em>。由于设置的是百分比，因此这在任何设备中显示的比例都是一样的。</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-02-28-064021.png" alt="image-20220228144020887" style="zoom:50%;"><p>例如在 <em>360</em> 的移动端网页（ <em>https://m.360.cn/</em> ）中，就采用了这种适配方案。</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-02-28-064039.png" alt="image-20220228144038800"></p><p>但是这种方案往往需要配合其他适配方案一起使用。</p><h2 id="viewport-缩放适配" tabindex="-1"><a class="header-anchor" href="#viewport-缩放适配" aria-hidden="true">#</a> <em>viewport</em> 缩放适配</h2><p>接下来是 <em>viewport</em> 缩放适配，这种适配方案的原理就是把所有机型的 <em>CSS</em> 像素（设备宽度）设置成一致的。</p><p>通过前面的学习，我们已经知道不同的设备，<em>CSS</em> 像素是不一样的。例如 <em>iPhone 6/7/8</em> 为 <em>375px</em>，而 <em>iPhone 6/7/8 Plus</em> 为 <em>414px</em>。那么，我们可以通过设置 <em>viewport</em> 的缩放，来使页面显示正常。</p><p>举个例子，现在有如下的代码：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 375px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.list div</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 93.75px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.list div:nth-child(1)</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.list div:nth-child(2)</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.list div:nth-child(3)</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.list div:nth-child(4)</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，我们按照 <em>iPhone 6/7/8</em> 的设备宽度来设置的，因此在 <em>iPhone 6/7/8</em> 中显示正常，但是到了 <em>iPhone 6/7/8 Plus</em> 就出现了问题。</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-02-28-064105.png" alt="image-20220228144105042" style="zoom:50%;"><p>此时，我们就可以通过缩放 <em>viewport</em> 的形式来让网页显示正常。</p><p>那么问题来了，缩放多少呢？由于我们在书写网页时，页面的宽度是按照 <em>375px</em> 去写的，因此缩放比应该按照 <em>375px</em> 去计算。也就是 <em>414/375 = 1.104</em></p><p>于是我们在设置 <em>viewport</em> 的 <em>meta</em> 标签中添加 <em>id</em> 属性，值为 <em>view</em>，然后仍然在 <em>head</em> 标签中添加如下的 <em>script</em> 代码：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> view <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;view&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view<span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token string">&#39;initial-scale=&#39;</span> <span class="token operator">+</span> <span class="token number">1.104</span> <span class="token operator">+</span> <span class="token string">&#39;,user-scalable=no,minimum-scale=&#39;</span> <span class="token operator">+</span> <span class="token number">1.104</span> <span class="token operator">+</span> <span class="token string">&#39;,maximum-scale=&#39;</span> <span class="token operator">+</span> <span class="token number">1.104</span> <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后我们可以发现此时在 <em>iPhone 6/7/8 Plus</em> 中就显示正常了。不过，如果切换另一个手机，此时就又不正常了，原因也很简单，不同的设备其设备宽度是不一样的，因此我们不能够将设备宽度写死为 <em>414</em>，而是要获取当前设备的宽度，然后再来计算缩放比。</p><p>代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//获取css像素（viewport没有缩放）</span>
	<span class="token keyword">var</span> curWidth<span class="token operator">=</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>
	
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>curWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">var</span> targetWidth<span class="token operator">=</span><span class="token number">375</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> scale<span class="token operator">=</span>curWidth<span class="token operator">/</span>targetWidth<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">var</span> view<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;view&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>

	view<span class="token punctuation">.</span>content<span class="token operator">=</span><span class="token string">&#39;initial-scale=&#39;</span><span class="token operator">+</span>scale<span class="token operator">+</span><span class="token string">&#39;,user-scalable=no,minimum-scale=&#39;</span><span class="token operator">+</span>scale<span class="token operator">+</span><span class="token string">&#39;,maximum-scale=&#39;</span><span class="token operator">+</span>scale<span class="token operator">+</span><span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看样子是解决了问题，但是这种适配方案也有其本身的缺点，主要有两点：</p><ul><li>就像在viewport设置宽度的时候，可以把宽度设置成一个固定值一样，会出现所有的手机看上去都是同样的大小，没有分别了，不太好，厂商特意做出各种大小的手机，还要弄成一样，那人家买大屏机有什么意义</li><li>算出的的值在一些有小数的情况下可能会出现误差（无关紧要），因为设备独立像素不能有小数</li><li>对设计稿的测量存在问题</li></ul><h2 id="dpr-缩放适配" tabindex="-1"><a class="header-anchor" href="#dpr-缩放适配" aria-hidden="true">#</a> <em>DPR</em> 缩放适配</h2><p>后面渐渐的又出现了根据 <em>DPR</em> 的形式来进行缩放。首先回顾一下 <em>DPR</em>，指的是像素比（物理像素 / <em>CSS</em> 像素）。</p><p>还是以 <em>iPhone6/7/8</em> 来举例，<em>iPhone6/7/8</em> 物理像素为 <em>750px</em>，<em>CSS</em> 像素（设备宽度）为 <em>375px</em>，<em>DPR</em> 比例为 <em>2.0</em>。此时假设 UI 要给我们一张图占满整个屏幕的图，她是按照 <em>750px</em> 起稿还是 <em>375px</em> 起稿？</p><p>答案是按照物理像素 <em>750px</em> 进行起稿。</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-02-28-064131.png" alt="image-20220228144131072"></p><p>如上图：对于 <em>dpr=2</em> 的 <em>retina</em> 屏幕而言，<em>1</em> 个位图像素对应于 <em>4</em> 个物理像素，由于单个位图像素不可以再进一步分割，所以只能就近取色，从而导致图片模糊（注意上述的几个颜色值）。</p><p>所以，对于图片高清问题，比较好的方案就是两倍图片（<em>@2x</em>）</p><p>如：<em>200×300(css pixel)img</em> 标签，就需要提供 <em>400×600</em> 的图片。</p><p>如此一来，位图像素点个数就是原来的 <em>4</em> 倍，在 <em>retina</em> 屏幕下，位图像素点个数就可以跟物理像素点个数形成 <em>1 : 1</em> 的比例，图片自然就清晰了。</p><p>这里就还有另一个问题，如果普通屏幕下，也用了两倍图片，会怎样呢？</p><p>很明显，在普通屏幕下，<em>200×300(css pixel)img</em> 标签，所对应的物理像素个数就是 <em>200×300</em> 个，而两倍图片的位图像素个数则是 <em>200×300×4</em>，所以就出现一个物理像素点对应 <em>4</em> 个位图像素点，所以它的取色也只能通过一定的算法（显示结果就是一张只有原图像素总数四分之一，我们称这个过程叫做 <em>downsampling</em>），肉眼看上去虽然图片不会模糊，但是会觉得图片缺少一些锐利度，或者是有点色差（但还是可以接受的）。</p><p>用一张图片来表示：</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-02-28-064241.png" alt="image-20220228144240755" style="zoom:50%;"><p>明白了这个点之后，接下来我们来看基于 <em>DPR</em> 的缩放适配方式，其原理就是将把 <em>CSS</em> 像素缩放成与设备像素一样大的尺寸。</p><p>因为在实际开发中，设计者为了页面的高清，都是采用物理像素的值来进行设计。例如比如 <em>iPhone6/7/8</em> 的设备宽度为 <em>375px</em>，我们将其缩放为 <em>750px</em>。</p><p>常见的设计稿尺寸有：<em>640x960、640x1136、750x1134</em></p><p>对应的代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> meta <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;meta[name=&quot;viewport&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// window.devicePixelRatio 获取 DPR 的值</span>
    <span class="token comment">// 以 iPhone 6/7/8 为例</span>
    <span class="token comment">// 750px * 缩放值 = 375px =&gt; 缩放值 = 375px/750px =&gt; 缩放值 = 1/DPR</span>
    <span class="token keyword">var</span> scale <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> window<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>meta<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//这个条件成立说明用户没有写meta标签，我需要创建一个</span>
        meta <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;meta&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        meta<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;viewport&#39;</span><span class="token punctuation">;</span>
        meta<span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token string">&#39;width=device-width,initial-scale=&#39;</span> <span class="token operator">+</span> scale <span class="token operator">+</span> <span class="token string">&#39;,user-scalable=no,minimum-scale=&#39;</span> <span class="token operator">+</span> scale <span class="token operator">+</span> <span class="token string">&#39;,maximum-scale=&#39;</span> <span class="token operator">+</span> scale <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>meta<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        meta<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;width=device-width,initial-scale=&#39;</span> <span class="token operator">+</span> scale <span class="token operator">+</span> <span class="token string">&#39;,user-scalable=no,minimum-scale=&#39;</span> <span class="token operator">+</span> scale <span class="token operator">+</span> <span class="token string">&#39;,maximum-scale=&#39;</span> <span class="token operator">+</span> scale <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>好，接下来我们来看效果：</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-02-28-064304.png" alt="image-20220228144303364" style="zoom:50%;"><p>纳尼？按照 <em>DPR</em> 缩放为 <em>750px</em> 后，反而占不满了，因为我们给的宽度为 <em>375px</em>，因此只占了一半。</p><p>那么这种缩放方式有啥意义呢？</p><p>实际上这种方式最大的意义就是开发者和设计者的像素都是统一的，因为设计者是按照 <em>750px</em> 来设计的（<em>iPhone 6/7/8</em> 为例），那么我们前端在量图的时候，也是以 <em>750px</em> 为基准。通过 <em>DPR</em> 缩放，我们量出来是多少，在写代码时就可以设置多少。</p><p>但是这种方案好像并没有解决适配的问题，假设设计稿给的是 750px 像素，我测量出来也的确是 750px，但是如果此时我将宽度设置为 750px，只能保证在 iPhone 6/7/8 中没有问题，如果换成 <em>iPhone 6/7/8 Plus</em>，仍然存在适配问题，那么怎么解决呢？</p><p>此时就需要我们使用 <em>rem</em> 适配了。</p><h2 id="rem-适配" tabindex="-1"><a class="header-anchor" href="#rem-适配" aria-hidden="true">#</a> <em>rem</em> 适配</h2><p>接下来就要介绍目前在移动端适配中比较主流的方案 - <em>rem</em> 适配了。</p><p>在介绍具体的 <em>rem</em> 适配之前，我们先来回顾一下 <em>rem</em> 是什么。</p><p><em>rem</em> 英语全称 <em>font size of the root element</em>，是 <em>CSS3</em> 新增的一个相对单位，是指相对于根元素的字体大小的单位，它就是一个相对单位。</p><p>来看一个简单的例子：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">:root</span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">p</span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的示例中，我们设置根元素的字体为 <em>20px</em>，之后所有的元素设置 <em>rem</em> 单位表示根据根元素字体大小来缩放。例如 <em>p</em> 元素的字体大小是 <em>2rem</em>，也就是 <em>2 x 20px = 40px</em></p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-03-03-010326.png" alt="image-20220303090325791" style="zoom:50%;"><p>而下面的 <em>div</em> 并没有设置字体大小，在设置宽度时也使用的是 <em>rem</em>，<em>2rem</em> 仍然等于 <em>2 x 20px = 40px</em>。</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-03-03-010352.png" alt="image-20220303090351602" style="zoom:50%;"><p>接下来我们来看一下 <em>rem</em> 实现适配的原理。</p><p><em>rem</em> 适配的原理，就是把所有的设备都分成相同的若干份，再计算元素宽度<strong>所占的份数</strong>。</p><p>举个例子，<em>iPhone5</em> 和 <em>iPhone6</em> 对应的设备宽度分别为 <em>320px</em> 和 <em>375px</em>，现在我们将其分为 <em>100</em> 列，那么对应每一列为 <em>3.2px</em> 和 <em>3.75px</em>。看见没，不同的设备宽度，对应的每一列的宽度就不一样。之后我们再设置元素的宽度时，以列为媒介即可。</p><p>比如同样一个 <em>div</em>，我们设置它的宽度为 <em>10</em> 列，那么在 <em>iPhone5</em> 中该 <em>div</em> 的宽就是 <em>32px</em>，而在 <em>iPhone6</em> 中该 <em>div</em> 的宽度就是 <em>37.5px</em>。你看，通过这种方式是不是就实现了不同设备宽度的设备中，一个元素的大小可以等比例的缩放。</p><p>当然，讲到这里有的同学会说，不对呀？我们从设计稿量出来都是像素呀？假设我从设计稿量出来是 <em>100px</em>，我怎么知道这是多少列呢？</p><p>没错，此时就需要一个转换了，我们需要算出测量出来的宽度在总宽度中究竟占几列。</p><p>假设设计稿是按照 <em>750px</em>（<em>iPhone 6/7/8</em> 尺寸）设计的，我们测量出来的是 <em>100px</em>物理像素，那么换算成逻辑像素就是 <em>50px</em>。而一列的宽度我们是知道的，因此 <em>50/3.75</em> 约等于 <em>13.33</em> 列，后面在设置盒子宽度时，就可以设置为 <em>13.33</em> * 一列的宽度。</p><p>再来举一个例子：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>iPhone5 逻辑像素320px 物理像素640px
iPhone6 逻辑像素375px 物理像素750px
dpr=物理像素/逻辑像素
将320或者375分成100列，每列宽度为3.2或者3.75
现在设计师按照物理像素 750px 起稿，有一个元素，我们测量出来是 375px（物理像素），dpr为2
转换【逻辑像素的宽度】就是 375/2 = 187.5
接下来计算列数：187.5/3.75 = 50(rem)
之后，我们只需要设置该元素的宽度为 50 * 一列宽度即可
在 iPhone5 中：50 * 3.2 = 160
在 iPhone6 中：50 * 3.75 = 187.5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而这个一列的宽度，实际上就是 <em>rem</em>。也就是说，<em>rem</em> 的适配方式，就是根据屏幕的宽度配合列数算出一列的宽度，之后设置 <em>HTML</em> 文档根元素的 <em>font-size</em> 就为此宽度即可。</p><p>下面是基于此适配原理的一种实现方案：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> html <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span> <span class="token comment">// HTML 根元素</span>
    <span class="token keyword">var</span> width <span class="token operator">=</span> html<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span> <span class="token comment">// CSS 像素(逻辑宽度)</span>
    html<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">16</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 把屏幕分成了 16 列</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种方案虽然按照我们上面所讲的，将屏幕分为了 <em>16</em> 列，然后将根字体大小设置为了每一列的宽度。例如：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 假设测量出来为 375px，换算为逻辑宽度为 187.5px
    然后计算出占用多少列 187.5/23.4375 = 8 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> html <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span> <span class="token comment">// HTML 根元素</span>
    <span class="token keyword">var</span> width <span class="token operator">=</span> html<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span> <span class="token comment">// CSS 像素(逻辑宽度)</span>
    html<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">16</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 把屏幕分成了 16 列</span>
    <span class="token comment">// 每一列的宽度为 23.4375</span>
    <span class="token comment">// 因此设置根元素的字体大小为 23.4375px</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 8rem<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 8rem<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下：</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-03-03-010417.png" alt="image-20220303090416842" style="zoom:50%;"><p>但是上面的实现方案比较麻烦的是我们在测量设计稿后要将设计稿上的宽度转为列数。</p><p>目前一种比较流行的方式如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">doc<span class="token punctuation">,</span> win<span class="token punctuation">,</span> designWidth</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> html <span class="token operator">=</span> doc<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">refreshRem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> clientWidth <span class="token operator">=</span> html<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>clientWidth <span class="token operator">&gt;=</span> designWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果设备宽度都大于设计稿了，那么测量出来是多少就是多少</span>
            html<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token string">&#39;100px&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 计算出比例</span>
            <span class="token comment">// 拿 iPhone6 为例，375/750=0.5</span>
            <span class="token comment">// 相当于每一列的宽度为 0.5px，分成了 750 列</span>
            <span class="token comment">// 但是浏览器是不允许这么小的字体大小的，因此乘上一个 100</span>
            <span class="token comment">// 变成每一列的宽度为 50px</span>
            <span class="token comment">// 之后在将设计稿尺寸转换为列数时，也不需要繁杂的计算</span>
            <span class="token comment">// 假设设计稿量出来为 375px =&gt; 187.5(CSS像素) =&gt; 187.5/50(每一列宽度) = 3.75(所占列数)</span>
            html<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token punctuation">(</span>clientWidth <span class="token operator">/</span> designWidth<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    doc<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;DOMContentLoaded&#39;</span><span class="token punctuation">,</span> refreshRem<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> window<span class="token punctuation">,</span> <span class="token number">750</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这种方案，最方便的便是设计稿量出来的尺寸和列数之间的转换关系，只需要将量出来的尺寸小数点往前移动两位即可。</p><h2 id="vw、vh-适配" tabindex="-1"><a class="header-anchor" href="#vw、vh-适配" aria-hidden="true">#</a> <em>vw、vh</em> 适配</h2><p><em>CSS3</em> 除了带来 <em>rem</em> 单位，还带来了和 <em>Viewport</em> 相关的 <em>4</em> 个单位，分别为 <em>vw、vh、vmin</em> 和 <em>vmax</em>。</p><ul><li><p><em>vw</em> 是 <em>Viewport&#39;s width</em> 的简写，<em>1vw</em> 等于 <em>window.innerWidth</em> 的 <em>1%</em></p></li><li><p><em>vh</em> 和 <em>vw</em> 类似，是 <em>Viewport&#39;s height</em> 的简写，<em>1vh</em> 等于 <em>window.innerHeihgt</em> 的 <em>1%</em></p></li><li><p><em>vmin</em> 的值是当前 <em>vw</em> 和 <em>vh</em> 中较小的值</p></li><li><p><em>vmax</em> 的值是当前 <em>vw</em> 和 <em>vh</em> 中较大的值</p></li></ul><p>具体如下图所示：</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-03-03-010445.png" alt="image-20220303090445243" style="zoom:50%;"><p>有没有发现，<em>vw</em> 相当于直接将屏幕分为了 <em>100</em> 列，<em>1vw</em> 就是 <em>1</em> 列。</p><p>那么按照 <em>iPhone 6/7/8</em> 逻辑宽度为 <em>375px</em>，因此 <em>1vw</em> 就是 <em>3.75px</em>。而根据我们上面的公式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>html<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token punctuation">(</span>clientWidth <span class="token operator">/</span> designWidth<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将元素的字体大小设置为 <em>50px</em>，此时和设计稿测量出来的尺寸转换会非常的和谐，只需要小数点往前移动 <em>2</em> 位即可。因此我们需要计算 <em>50px</em> 对应多少 <em>vw</em>。</p><p>由于 <em>1vw</em> 对应的宽度为 <em>3.75px</em>，所以我们可以很轻松的计算出 <em>50/3.75 = 13.33333333vw</em>。</p><p>测试如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">:root</span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 13.33333333vw<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 3.75rem<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 3.75rem<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下：</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-03-03-010514.png" alt="image-20220303090513909" style="zoom:50%;"><p>可以看到，使用 <em>vw</em> 的一个最大优点就是不需要再使用前面那一大段 <em>JS</em> 来做处理了，因为分列的工作 <em>vw</em> 已经帮我们做了。唯一需要做的就是计算根元素字体应该设置多少 <em>vw</em>，之后从测量稿量出来的尺寸仍然是小数点前移 <em>2</em> 位即可。</p><h2 id="使用第三方库进行适配" tabindex="-1"><a class="header-anchor" href="#使用第三方库进行适配" aria-hidden="true">#</a> 使用第三方库进行适配</h2><p>一直以来，移动端适配问题都困扰着移动端的开发者，这也不乏民间出现了许多第三方库来解决适配问题。其中比较有名的就是 <em>hotcss</em> 移动端布局开发解决方案。</p><p><em>github</em> 地址：<em>https://github.com/imochen/hotcss</em></p><p>下面是一个 <em>hotcss</em> 的简单示例。</p><p>首先从 <em>hotcss</em> 的 <em>github</em> 地址下载对应的文件，我们需要的主要有 <em>hotcss.js、px2rem.scss</em> 这 <em>2</em> 个文件。</p><p>接下来创建如下的目录：</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-03-03-021240.png" alt="image-20220303101239916" style="zoom:50%;"><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./index.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./hotcss.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的 <em>HTML</em> 文件中，我们引入了 <em>hotcss.js</em> 以及 <em>index.css</em>，其中 <em>index.css</em> 是由 <em>scss</em> 自动生成的。</p><p>这里推荐大家按照一个 <em>VSCode</em> 的插件：</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-03-03-021303.png" alt="image-20220303101302281" style="zoom:50%;"><p>该插件在书写完 <em>Sass、Scss</em> 代码后只需要保存一下就会在当前目录下生成转译后的 <em>CSS</em> 文件，非常的方便。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token string">&#39;px2rem.scss&#39;</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$designWidth</span></span><span class="token punctuation">:</span>750<span class="token punctuation">;</span>

<span class="token selector">*</span><span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">body</span><span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span><span class="token function">px2rem</span><span class="token punctuation">(</span>187.5<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span><span class="token function">px2rem</span><span class="token punctuation">(</span>187.5<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token property">div</span><span class="token punctuation">:</span><span class="token function">nth-child</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的 <em>Scss</em> 文件中，首先引入 <em>px2rem.scss</em>，该文件导出了一个 <em>px2rem</em> 的函数，负责将 px 转换为 rem。之后设置 <em>$designWidth</em> 为 <em>750</em> 为设计稿的宽度。</p><p>然后我们就可以愉快的书写代码了，从设计稿测量出来的是多少像素，就直接书写多少像素，不过用 <em>px2rem</em> 方法包一下即可。<em>Scss</em> 进行转译的时候会自动转换为 <em>rem</em> 单位。</p><p>另外阿里早期也开源的一个移动端适配解决方案 <em>flexible</em></p><p><em>github</em> 地址：<em>https://github.com/amfe/lib-flexible</em></p><p>不过随着 <em>vw、vh</em> 这种基于视口的单位得到越来越多浏览器的支持，所以官方也已经不再维护这个库，有兴趣的同学可以自行了解。</p><hr><p>-<em>EOF</em>-</p>`,134),c=[e];function o(i,l){return s(),a("div",null,c)}const m=n(p,[["render",o],["__file","responseAdaptive2.html.vue"]]);export{m as default};
