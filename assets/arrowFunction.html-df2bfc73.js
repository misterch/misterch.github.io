import{_ as e,o as t,c as o,a,b as n,d as s}from"./app-d4c6289a.js";const c={},l=a(`<h2 id="this指向" tabindex="-1"><a class="header-anchor" href="#this指向" aria-hidden="true">#</a> this指向</h2><ul><li>通过对象调用函数，<code>this</code>指向对象</li><li>直接调用函数，<code>this</code>指向全局对象</li><li>如果通过<code>new</code>调用函数，<code>this</code>指向新创建的对象</li><li>如果通过<code>apply</code>、<code>call</code>、<code>bind</code>调用函数，<code>this</code>指向指定的对象</li><li>如果是DOM事件函数，<code>this</code>指向事件源</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//obj调用increase，this指向obj</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// obj</span>
    <span class="token keyword">const</span> _this <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//这个函数并非由obj调用，直接由js引擎调用，this指向全局</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
      _this<span class="token punctuation">.</span>count<span class="token operator">++</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="箭头函数语法" tabindex="-1"><a class="header-anchor" href="#箭头函数语法" aria-hidden="true">#</a> 箭头函数语法</h2><p>箭头函数是一个<strong>函数表达式</strong>，理论上，任何使用函数表达式的场景都可以使用箭头函数</p><h2 id="注意细节" tabindex="-1"><a class="header-anchor" href="#注意细节" aria-hidden="true">#</a> 注意细节</h2>`,6),p=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("ol",null,[n("li",null,[n("p",null,[s("箭头函数的函数体中的"),n("code",null,"this"),s("，取决于箭头函数"),n("strong",null,"定义时的位置"),s("的"),n("code",null,"this"),s("指向，即定义"),n("strong",null,"该函数时所在的作用域指向的对象"),s("，与如何调用无关")])]),n("li",null,[n("p",null,[s("实际上，箭头函数不存在"),n("code",null,"this"),s("，也不存在"),n("code",null,"arguments"),s("、"),n("code",null,"new.target"),s("，如果使用了这些属性，则使用的是箭头函数外层函数对象的"),n("code",null,"this"),s("、"),n("code",null,"arguments"),s("、"),n("code",null,"new.target")])]),n("li",null,[n("p",null,"箭头函数没有原型")]),n("li",null,[n("p",null,"箭头函数不能作为构造函数使用")])])],-1),i=a(`<ol><li>在函数中使用箭头箭头函数 ，箭头函数中的this指向箭头函数外的函数中的this，arguments也是使用箭头函数外的函数的arguments</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> increaseArgs <span class="token operator">=</span> arguments
    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token comment">//箭头函数没有this，这里使用this取决于箭头函数定义时的位置的this指向，即这个箭头函数是在increase函数中定义，increase函数的this指向obj，箭头函数中使用的this就指向obj</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span> <span class="token comment">// 1</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>increaseArgs <span class="token operator">===</span> arguments<span class="token punctuation">)</span> <span class="token comment">//true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在对象中使用箭头函数定义方法，箭头函数的函数体的this指向定义这个对象所在的作用域指向的对象，即this并非指向对象本身，而是指向这个对象所处的作用域的对象</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token function-variable function">increase</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">//箭头函数中的this指向obj所处的作用域的对象，这里是window</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token comment">//window</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),u=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("p",null,[s("在对象中定义的方法"),n("strong",null,"不能"),s("使用箭头函数")])],-1),r=n("h2",{id:"应用场景",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#应用场景","aria-hidden":"true"},"#"),s(" 应用场景")],-1),d=n("ol",null,[n("li",null,"临时性使用的函数，如：事件处理函数，异步处理函数等等临时性函数"),n("li",null,"为了绑定箭头函数外层函数的this"),n("li",null,"在不影响其他代码的情况下，保持代码的简洁，如：数组方法中的回调函数回调函数")],-1),k=[l,p,i,u,r,d];function v(h,m){return t(),o("div",null,k)}const g=e(c,[["render",v],["__file","arrowFunction.html.vue"]]);export{g as default};
