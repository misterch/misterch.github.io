import{_ as p,r as o,o as i,c as r,b as n,d as s,e,a as t}from"./app-d4c6289a.js";const l={},c=t(`<h2 id="eslint" tabindex="-1"><a class="header-anchor" href="#eslint" aria-hidden="true">#</a> ESLint</h2><h3 id="eslint作用" tabindex="-1"><a class="header-anchor" href="#eslint作用" aria-hidden="true">#</a> ESLint作用</h3><p><code>ESLint</code>用来检查代码质量和风格的工具，检查代码中不符合规则的地方，部分问题支持自动修复</p><ul><li>代码检查检查代码中存在的错误，如<strong>未声明变量</strong>、<strong>声明但未使用变量</strong>、<strong>修改const变量</strong></li><li>代码格式化 统一代码风格，如不加分号、字符串使用单引号、使用tab或者空格等</li></ul><h3 id="eslint中的核心概念" tabindex="-1"><a class="header-anchor" href="#eslint中的核心概念" aria-hidden="true">#</a> ESLint中的核心概念</h3><h4 id="env" tabindex="-1"><a class="header-anchor" href="#env" aria-hidden="true">#</a> env</h4><p>根据不同环境，eslint判断某些全局成员是否可用，避免在代码中使用不存在的成员</p><table><thead><tr><th>环境</th><th>说明</th></tr></thead><tbody><tr><td>browser</td><td>浏览器环境中的全局变量</td></tr><tr><td>node</td><td>全局变量和node.js作用域</td></tr><tr><td>es6</td><td>开启除了modules以外的所有ecmascript6特性，会自动设置ecmaVersion解析器选项为6</td></tr></tbody></table><h4 id="parser" tabindex="-1"><a class="header-anchor" href="#parser" aria-hidden="true">#</a> parser</h4><p>将代码转换为 eslint 能理解的 AST 语法树。</p><p>parser是解析器，其功能对应编译原理中的词法分析、语法分析。</p><h4 id="parseroptions解析器配置" tabindex="-1"><a class="header-anchor" href="#parseroptions解析器配置" aria-hidden="true">#</a> parserOptions解析器配置</h4><h5 id="ecmaversion" tabindex="-1"><a class="header-anchor" href="#ecmaversion" aria-hidden="true">#</a> ecmaVersion</h5><p>影响的只是语法<strong>检测</strong>，不代表一些语法是否可用，需要根据<strong>env</strong>来定义</p><h5 id="sourcetype" tabindex="-1"><a class="header-anchor" href="#sourcetype" aria-hidden="true">#</a> sourceType</h5><p>可选项有<code>script</code>和<code>module</code>，当设置<code>module</code>时，<code>ecmaVersion</code>不能低于2015版本</p><h4 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> plugins</h4><p>eslint本身有些规则，但无法包含所有规则，因此eslint支持自定义规则，针对某种语法自定义的那些规则称之为eslint插件</p><p>‼️ 注意<code>plugins</code>提供了检查和修复能力，但只是加载了插件，引入了额外自定义的 <code>rules</code>，但并没有将这些规则应用上，需要配置 <code>extends</code>或者 <code>rules</code>才能够应用规则</p><p>一般插件命名为：<code>eslint-plugin-xxx</code></p><p>在配置插件时，一般会省略eslint-plugin，如 <code>eslint-plugin-vue</code>，配置时只需写vue就可</p><h4 id="rules" tabindex="-1"><a class="header-anchor" href="#rules" aria-hidden="true">#</a> rules</h4><p>可以单独设置某些规则</p><p>如果需要使用某些eslint插件中的规则，可以先在<code>plugins</code>中配置插件，然后在<code>rules</code>中使用插件中的规则</p><p>例如安装<code>eslint-plugin-react</code>，配置<code>plugin:[&#39;react&#39;]</code>，再配置<code>&#39;rules&#39;:{&#39;react/jsx-uses-react&#39;: 2}</code></p><h4 id="extends" tabindex="-1"><a class="header-anchor" href="#extends" aria-hidden="true">#</a> extends</h4><p>extends可以看成是一个配置方案的最佳实践，里面是别人配置好了的eslint规则配置，通过extends来继承别人的配置</p><p>如果规则冲突，位置靠后的覆盖前面的</p><p>一般命名为： <code>eslint-config-</code>开头</p><p>配置 <code>extends</code>时，可以省略 <code>eslint-config-</code></p><p>如果是插件中的config，则写成 <code>plugin:plugin-name/config-name</code></p><p>例如<code>eslint-plugin-react</code>这是eslint插件，里面有导出预设config，无需再<code>plugins</code>中引入插件，直接在<code>extends</code>中使用该插件的config，这样配置<code>plugin:react/recommended</code></p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides" aria-hidden="true">#</a> overrides</h4><p>若要对某些文件进行更细致的定制化，则在 <code>overrides</code>字段中进行配置</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">overrides</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">files</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*.js&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;*.spec.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">excludeFiles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;*.test.js&#39;</span><span class="token punctuation">]</span>
      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;no-unused-expressions&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="root" tabindex="-1"><a class="header-anchor" href="#root" aria-hidden="true">#</a> root</h4><p>设置配置文件的目录</p><p>设置为false或没有配置时，会一直寻找 <code>.eslintrc.*</code>和 <code>package.json</code>，直到文件系统的根目录</p><p>为true时，则停止在父级目录中寻找</p><h3 id="项目中配置-eslintrc-js" tabindex="-1"><a class="header-anchor" href="#项目中配置-eslintrc-js" aria-hidden="true">#</a> 项目中配置 .eslintrc.js</h3><h4 id="检测vue的插件" tabindex="-1"><a class="header-anchor" href="#检测vue的插件" aria-hidden="true">#</a> 检测vue的插件</h4><p>检测vue的语法校验需要安装这些插件 <code>eslint-plugin-vue</code></p><h4 id="检测typescript的插件" tabindex="-1"><a class="header-anchor" href="#检测typescript的插件" aria-hidden="true">#</a> 检测Typescript的插件</h4><p>检测Typescript语法需要安装 <code>@typescript-eslint</code></p><h4 id="检测所有babel-code" tabindex="-1"><a class="header-anchor" href="#检测所有babel-code" aria-hidden="true">#</a> 检测所有babel code</h4><p>需要使用 <code>@babel/eslint-parser</code></p><p><code>pnpm add -D eslint-plugin-vue eslint-plugin-import eslint-plugin-node @babel/eslint-parser</code></p><h4 id="具体配置" tabindex="-1"><a class="header-anchor" href="#具体配置" aria-hidden="true">#</a> 具体配置</h4><p>使用：在 <code>plugins</code>中引入插件的规则，在 <code>extends</code>中使用插件的规则使其生效，<code>rules</code>中可对插件的规则进行自定义配置</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>export <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 继承的规则，用来检测代码质量和格式化代码</span>
  <span class="token keyword">extends</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token string">&quot;eslint:recommended&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;plugin:vue/vue3-essential&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;plugin:@typescript-eslint/recommended&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&#39;vue-eslint-parser&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// 比parser优先级低</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span><span class="token string">&#39;latest&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">parser</span><span class="token operator">:</span><span class="token string">&#39;@typescript-eslint/parser&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">jsxPragma</span><span class="token operator">:</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ecmaFeatures</span><span class="token operator">:</span><span class="token punctuation">{</span>
      <span class="token literal-property property">jsx</span><span class="token operator">:</span><span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token comment">// eslint规则</span>
    <span class="token comment">// typescript规则</span>
    <span class="token comment">// eslint-plugin-vue</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,50),d=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("p",null,"Q：parser和parserOptions.parser指定解析器的区别"),n("p",null,[s("A："),n("code",null,"parser"),s("默认解析器是 "),n("code",null,"espree"),s("，这里指定 "),n("code",null,"vue-eslint-parser"),s("作为"),n("strong",null,"主要解析器"),s(" ，它将处理 "),n("code",null,".vue"),s("文件，尤其是 "),n("code",null,"<template>"),s("标签")]),n("p",null,"parserOptions是传给vue-eslint-parser的参数"),n("p",null,[s("这个解析器的自定义选项（parserOptions）指定使用 "),n("code",null,"@typescript-eslint/parser"),s("解析器对 "),n("code",null,".vue"),s("文件中的 "),n("code",null,"<script>"),s("标记进行 lint")])],-1),u=t(`<p>parserOptions.parser可以指定为一个对象</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>
<span class="token property">&quot;parser&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-eslint-parser&quot;</span><span class="token punctuation">,</span>

<span class="token property">&quot;parserOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>

  <span class="token property">&quot;parser&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>

     <span class="token comment">// Script parser for \`&lt;script&gt;\`</span>

    <span class="token property">&quot;js&quot;</span><span class="token operator">:</span><span class="token string">&quot;espree&quot;</span><span class="token punctuation">,</span>

    <span class="token comment">// Script parser for \`&lt;script lang=&quot;ts&quot;&gt;\`</span>

    <span class="token property">&quot;ts&quot;</span><span class="token operator">:</span><span class="token string">&quot;@typescript-eslint/parser&quot;</span><span class="token punctuation">,</span>

    <span class="token comment">//解析模板中的vue语法（指令，mustache）</span>

    <span class="token property">&quot;&lt;template&gt;&quot;</span><span class="token operator">:</span> <span class="token string">&quot;espree&quot;</span><span class="token punctuation">,</span>

  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在vscode中开启eslint检测和修复问题代码" tabindex="-1"><a class="header-anchor" href="#在vscode中开启eslint检测和修复问题代码" aria-hidden="true">#</a> 在vscode中开启ESLint检测和修复问题代码</h3><ol><li>vscode安装 <code>eslint</code>插件</li><li>在用户级别或者项目级别的 <code>setting.json</code>中开启 <code>eslint</code></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;eslint.enable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在项目中安装 <code>eslint</code>并初始化</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装eslint到开发依赖</span>
<span class="token function">npm</span> i <span class="token parameter variable">-D</span> eslint
<span class="token comment"># 初始化eslint，在项目根目录创建.eslintrc文件</span>
npx eslint <span class="token parameter variable">--init</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>目前只是开启了检查代码，没有自动修复有问题的代码</strong></em></p><ol start="4"><li>开启vscode保存时修复问题代码</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;editor.codeActionOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 使用eslint来fix和格式化代码</span>
    <span class="token string-property property">&quot;source.fixAll.eslint&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// 使用所有提供的格式化工具进行格式化</span>
    <span class="token comment">//&quot;source.fixAll&quot;: true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在vue项目中出现 <code>.html</code>文件出现错误 <code>vue/comment-directive</code>，原因是eslint-plugin-vue仅能linting <code>.vue</code>而不能linting <code>.html</code></p><p>这里通过配置使用vue处理器对.html文件进行检查</p><p>或者关闭这个报错误的规则</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">overrides</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">files</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;*.html&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">processor</span><span class="token operator">:</span> <span class="token string">&#39;vue/.vue&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="prettier" tabindex="-1"><a class="header-anchor" href="#prettier" aria-hidden="true">#</a> Prettier</h2><h3 id="prettier作用" tabindex="-1"><a class="header-anchor" href="#prettier作用" aria-hidden="true">#</a> Prettier作用</h3><p>Prettier可以对代码进行格式化，不会对代码进行潜在问题检查 Prettier可对多种语言进行格式化，如 <code>vue</code>,<code>react</code>,<code>html</code>,<code>css</code>,<code>scss</code>,<code>json</code>,<code>jsx</code>等</p><h3 id="项目中配置-eslintrc-js-1" tabindex="-1"><a class="header-anchor" href="#项目中配置-eslintrc-js-1" aria-hidden="true">#</a> 项目中配置 .eslintrc.js</h3>`,18),v=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("p",null,[s("eslint和prettier由规则上冲突的部分，"),n("code",null,"eslint-config-prettier"),s("可以关闭eslint由关代码格式化的规则，使用prettier的规则来格式化")]),n("p",null,[n("a",{href:"#eslint%E5%92%8Cprettier%E7%9A%84%E5%86%B2%E7%AA%81"},"ESLint和Prettier的冲突")])],-1),k=t(`<p>需要安装 <code>eslint-plugin-prettier</code>和 <code>eslint-config-prettier</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">extends</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token string">&quot;plugin:prettier/recommended&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>plugin:prettier/recommended</code>做了以下事情</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;prettier&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 使用eslinst-config-prettier中的配置项</span>
  <span class="token string-property property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;prettier&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 注册该prettier插件</span>
  <span class="token string-property property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;prettier/prettier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 在eslint中运行prettier，并启用该插件提供的规则</span>
    <span class="token string-property property">&quot;arrow-body-style&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 关闭规则</span>
    <span class="token string-property property">&quot;prefer-arrow-callback&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span> <span class="token comment">// 关闭规则</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在项目根目录下创建 <code>.prettierrc.json</code>自定义检查规则</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;bracketSameLine&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;htmlWhitespaceSensitivity&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ignore&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;endOfLine&quot;</span><span class="token operator">:</span> <span class="token string">&quot;auto&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;trailingComma&quot;</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tabWidth&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token comment">// 解决&lt;!doctype html&gt;报错</span>
  <span class="token property">&quot;overrides&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;*.html&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;options&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;parser&quot;</span><span class="token operator">:</span> <span class="token string">&quot;html&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">//以vue解析器解析nvue文件</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*.nvue&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;options&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;parser&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在vscode中启用prettier" tabindex="-1"><a class="header-anchor" href="#在vscode中启用prettier" aria-hidden="true">#</a> 在vscode中启用Prettier</h3><blockquote><p>无需在项目中安装prettier，只需在vscode中安装并设置为默认格式化器或者在指定语言中设置默认格式化器</p></blockquote><ol><li>在vscode中安装 <code>prettier</code>插件</li><li>在用户级别或者项目级别的 <code>setting.json</code>中设置编辑器的默认格式化器</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;editor.defaultFormatter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esbenp.prettier-vscode&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>指定语言设置默认格式化器</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;[javascript]&quot;</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;editor.defaultFormatter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esbenp.prettier-vscode&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时虽然启用了 <code>prettier</code>，但保存文件时没有对文件进行格式化，仍需要一下操作</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token comment">// 开启保存文件自动格式化代码</span>
  <span class="token string-property property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// 默认的代码格式化工具</span>
  <span class="token string-property property">&quot;editor.defaultFormatter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esbenp.prettier-vscode&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 开启后，要求根目录下的有.prettierrc或者.editorconfig文件，覆盖prettier扩展中的默认配置</span>
  <span class="token comment">// 如果根目录下没有改配置文件，不会自动格式化</span>
  <span class="token string-property property">&quot;prettier.requireConfig&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 需要Prettier的配置文件</span>

  <span class="token comment">// 没有开启，则不要求，若根目录下有配置文件则以配置文件为准</span>
  <span class="token comment">//&quot;prettier.requireConfig&quot;: false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="eslint和prettier的冲突" tabindex="-1"><a class="header-anchor" href="#eslint和prettier的冲突" aria-hidden="true">#</a> ESLint和Prettier的冲突</h2><h3 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h3><p>ESLint和Prettier都可以对代码进行格式化</p><ul><li>两者重叠的格式化规则不一致</li><li>vscode同时开启了两者的格式化</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token comment">// 保存时格式化代码</span>
  <span class="token property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// 使用prettier格式化代码</span>
  <span class="token property">&quot;editor.defaultFormatter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esbenp.prettier-vscode&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;prettier.requireConfig&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;eslint.enable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// eslint开启</span>
  <span class="token property">&quot;editor.codeActionsOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;source.fixAll.eslint&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 代码保存使用eslint格式化代码</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="以和为贵-eslint和prettier和谐相处" tabindex="-1"><a class="header-anchor" href="#以和为贵-eslint和prettier和谐相处" aria-hidden="true">#</a> 以和为贵，eslint和prettier和谐相处</h3><p><code>eslint</code>检测代码质量 <code>prettier</code>对多种语言进行格式化</p><ul><li>对于两者重叠的格式化规则，要保持规则一致</li><li>或者使用共同作用的语言中一种进行格式化</li></ul><h4 id="对于两者重叠的格式化规则" tabindex="-1"><a class="header-anchor" href="#对于两者重叠的格式化规则" aria-hidden="true">#</a> 对于两者重叠的格式化规则</h4><blockquote><p>使用ESLint作为代码格式化工具，关闭可能与Prettier有冲突的格式化规则，把Prettier当做一个linter规则 需要在项目中安装这些依赖包</p></blockquote><ul><li><code>eslint-config-prettier</code>此包包含了eslint规则，用于关闭eslint有关代码格式化的配置</li><li><code>eslint-plugin-prettier</code> 将Prettier配置成一个eslint插件，让其当做一个linter规则来运行</li></ul><blockquote><p>eslint-plugin-prettier需要在项目中安装prettier依赖</p></blockquote><p>在项目的 <code>.eslintrc</code>配置文件中设置prettier插件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;extends&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;plugin:prettier/recommended&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样配置好后，两者就能协同格式化代码，eslint进行格式化时会忽略跟prettier重叠的格式化规则，交由prettier来格式化</p><h4 id="使用共同作用的语言中一种进行格式化" tabindex="-1"><a class="header-anchor" href="#使用共同作用的语言中一种进行格式化" aria-hidden="true">#</a> 使用共同作用的语言中一种进行格式化</h4><ol><li>项目中开启保存时使用默认prettier格式化器格式化所有代码</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;editor.defaultFormatter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esbenp.prettier-vscode&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>针对部分语言代码（如js，ts，jsx）<strong>关闭</strong>使用prettier格式化来格式化</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;[javascript]&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
    <span class="token string-property property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>开启eslint来格式化js,ts,jsx代码</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;editor.codeActionsOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;source.fixAll.eslint&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为在.eslintrc配置文件中已经配置使用prettier的格式化规则来linting代码，所以其实仍然使用的prettier来格式化代码，但也使用eslint来检查代码质量</p><h2 id="完整的-eslintrc配置" tabindex="-1"><a class="header-anchor" href="#完整的-eslintrc配置" aria-hidden="true">#</a> 完整的.eslintrc配置</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>export <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">browser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">es2021</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">//解决defineEmits、defineProps等宏报错</span>
    <span class="token string-property property">&#39;vue/setup-compiler-macros&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 继承的规则，用来检测代码质量和格式化代码</span>
  <span class="token keyword">extends</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token string">&quot;eslint:recommended&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;plugin:vue/vue3-essential&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;plugin:@typescript-eslint/recommended&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;plugin:prettier/recommended&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&#39;vue-eslint-parser&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// 比parser优先级低</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span><span class="token string">&#39;latest&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">parser</span><span class="token operator">:</span><span class="token string">&#39;@typescript-eslint/parser&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">jsxPragma</span><span class="token operator">:</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ecmaFeatures</span><span class="token operator">:</span><span class="token punctuation">{</span>
      <span class="token literal-property property">jsx</span><span class="token operator">:</span><span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token comment">// eslint规则</span>
    <span class="token comment">// typescript规则</span>
    <span class="token string-property property">&#39;@typescript-eslint/no-unused-vars&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;@typescript-eslint/prefer-ts-expect-error&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;@typescript-eslint/no-explicit-any&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;@typescript-eslint/no-non-null-assertion&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;@typescript-eslint/no-namespace&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;@typescript-eslint/semi&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// eslint-plugin-vue</span>
    <span class="token string-property property">&#39;vue/multi-word-component-names&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;vue/script-setup-uses-vars&#39;</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span>
    <span class="token string-property property">&#39;vue/no-mutating-props&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span>
    <span class="token string-property property">&#39;vue/attribute-hyphenation&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="完整的vscode配置" tabindex="-1"><a class="header-anchor" href="#完整的vscode配置" aria-hidden="true">#</a> 完整的vscode配置</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token comment">// 保存时对项目所有语言（除针对的语言外）的代码使用prettier格式化</span>
  <span class="token string-property property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> 
  <span class="token string-property property">&quot;editor.defaultFormatter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esbenp.prettier-vscode&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">//针对共用的语言如JS、TS和JSX关闭文件保存自动格式化功能，通过eslint来做这件事 </span>
  <span class="token string-property property">&quot;[javascript]&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
    <span class="token string-property property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> 
  <span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token string-property property">&quot;[javascriptreact]&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;[typescript]&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//使用eslint对代码进行检查和格式化</span>
  <span class="token string-property property">&quot;editor.codeActionsOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;source.fixAll.eslint&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一些出现的问题" tabindex="-1"><a class="header-anchor" href="#一些出现的问题" aria-hidden="true">#</a> 一些出现的问题</h2><h3 id="module-is-not-defined" tabindex="-1"><a class="header-anchor" href="#module-is-not-defined" aria-hidden="true">#</a> &#39;module&#39; is not defined</h3><p>在<code>eslintrc</code>配置文件中设置<code>env.node=true</code></p><h3 id="保存没有自动格式化" tabindex="-1"><a class="header-anchor" href="#保存没有自动格式化" aria-hidden="true">#</a> 保存没有自动格式化</h3><p>原因是<code>eslintrc</code>配置没有被应用到</p><p>留意<code>package.json</code>的<code>type</code>（commonjs和module）的设置，以及<code>eslintrc</code>配置文件的后缀（cjs和mjs）。</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,48),m={href:"https://zhuanlan.zhihu.com/p/554396222",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.5axxw.com/wiki/content/pu4u1a",target:"_blank",rel:"noopener noreferrer"},h={href:"https://zhuanlan.zhihu.com/p/486351487",target:"_blank",rel:"noopener noreferrer"},g={href:"https://juejin.cn/post/7233196954402373690#heading-7",target:"_blank",rel:"noopener noreferrer"};function y(q,f){const a=o("ExternalLinkIcon");return i(),r("div",null,[c,d,u,v,k,n("p",null,[n("a",m,[s("通关前端工程化（一）ESLint全方位解析，让你不再面向搜索引擎配置 - 知乎 (zhihu.com)"),e(a)])]),n("p",null,[n("a",b,[s("vue-eslint-parser: 用于 .vue文件的ESLint自定义解析器。 - 我爱学习网 (5axxw.com)"),e(a)])]),n("p",null,[n("a",h,[s("Eslint 核心概念 & 自定义 plugin 开发 - 知乎 (zhihu.com)"),e(a)])]),n("p",null,[n("a",g,[s("实现在 VSCode 中无痛开发 nvue：语法高亮、代码提示、eslint 配置及插件Patch - 掘金 (juejin.cn)"),e(a)])])])}const j=p(l,[["render",y],["__file","eslintnprettier.html.vue"]]);export{j as default};
